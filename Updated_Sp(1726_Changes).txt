USE [Adhoc]
GO

/****** Object:  StoredProcedure [dbo].[usp_PH0002ECPRO_MRx_Celgene_Zeposia_Status_Daily]    Script Date: 9/3/2021 11:54:53 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





/*
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_MRx_Celgene_Status_Daily]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_MRx_Celgene_Status_Daily]
GO
*/

ALTER PROCEDURE [dbo].[usp_PH0002ECPRO_MRx_Celgene_Zeposia_Status_Daily]
   (@FREQUENCY varchar(500) = NULL,
    @RUN_DATE  date = NULL,
	@LOG_TRANSACTION CHAR(1)='Y'
	)
AS
BEGIN

/*
NEED ASSESSMENT NAME FOR WARMN TRANSFER LOGIC (FIELDS 88 & 89 ON CONTRACT)
*/
/*======================================================
CLIENT: CELGENE
DRUG(S): OZANIMOD
REPORT: STATUS
FREQUENCY: DAILY (Monday thru Friday by 11:00 am EST)
FORMAT: pipe delimited text 
NAMING: BMS_MAGELLAN_STATUS_DLY_YYYYMMDD.txt
	HEADER 1: # OF RECORDS
	HEADER 2: COLUMN HEADERS
======================================================*/

IF OBJECT_ID('tempdb..#CLIENT_DRUGS' ,'U') IS NOT NULL           	 DROP TABLE #CLIENT_DRUGS              ;
IF OBJECT_ID('tempdb..#TEST_PATIENTS','U') IS NOT NULL           	 DROP TABLE #TEST_PATIENTS             ;
IF OBJECT_ID('tempdb..#PATIENT_SAMPLE','U') IS NOT NULL          	 DROP TABLE #PATIENT_SAMPLE            ;
IF OBJECT_ID('tempdb..#ALL_RX_SHIP_DT','U') IS NOT NULL          	 DROP TABLE #ALL_RX_SHIP_DT            ;
IF OBJECT_ID('tempdb..#ALL_REFERRALS_UNCLEAN','U') IS NOT NULL   	 DROP TABLE #ALL_REFERRALS_UNCLEAN     ;
IF OBJECT_ID('tempdb..#REFERRAL_FILTER' ,'U') IS NOT NULL        	 DROP TABLE #REFERRAL_FILTER           ;
IF OBJECT_ID('tempdb..#ALL_REFERRALS','U') IS NOT NULL           	 DROP TABLE #ALL_REFERRALS             ;
IF OBJECT_ID('tempdb..#FILL_ACTIVITY_ORDER','U') IS NOT NULL     	 DROP TABLE #FILL_ACTIVITY_ORDER       ;
IF OBJECT_ID('tempdb..#PATIENT_DRUG_SWITCHES','U') IS NOT NULL   	 DROP TABLE #PATIENT_DRUG_SWITCHES     ;
IF OBJECT_ID('tempdb..#CLAIM_RESPONSES','U') IS NOT NULL        	 DROP TABLE #CLAIM_RESPONSES           ;
IF OBJECT_ID('tempdb..#CLAIMS','U') IS NOT NULL                  	 DROP TABLE #CLAIMS                    ;
IF OBJECT_ID('tempdb..#QUEUE_LOCATION','U') IS NOT NULL          	 DROP TABLE #QUEUE_LOCATION            ;
IF OBJECT_ID('tempdb..#LAST_EVENT','U') IS NOT NULL             	 DROP TABLE #LAST_EVENT                ;
IF OBJECT_ID('tempdb..#DISCONTINUED_ORDERS_SAMPLE','U') IS NOT NULL  DROP TABLE #DISCONTINUED_ORDERS_SAMPLE;
IF OBJECT_ID('tempdb..#DC_DETAILS','U') IS NOT NULL                  DROP TABLE #DC_DETAILS                ;
IF OBJECT_ID('tempdb..#DISCONTINUED_FINAL','U') IS NOT NULL          DROP TABLE #DISCONTINUED_FINAL        ;
IF OBJECT_ID('tempdb..#SUB_STATUS_PRE','U') IS NOT NULL              DROP TABLE #SUB_STATUS_PRE            ;
IF OBJECT_ID('tempdb..#SUB_STATUS','U') IS NOT NULL                  DROP TABLE #SUB_STATUS                ;
IF OBJECT_ID('tempdb..#PRE_FINAL_STATUS','U') IS NOT NULL            DROP TABLE #PRE_FINAL_STATUS          ;
IF OBJECT_ID('tempdb..#FILL_NBR_LOG','U') IS NOT NULL                DROP TABLE #FILL_NBR_LOG	          ; 
IF OBJECT_ID('tempdb..#FIRST_FILL_RECORD','U') IS NOT NULL           DROP TABLE #FIRST_FILL_RECORD	      ;
IF OBJECT_ID('tempdb..#ORDER_FILL_DTTM','U') IS NOT NULL             DROP TABLE #ORDER_FILL_DTTM           ;
IF OBJECT_ID('tempdb..#DC_DTTM','U') IS NOT NULL                     DROP TABLE #DC_DTTM                   ;
IF OBJECT_ID('tempdb..#NEVER_FILLED','U') IS NOT NULL                DROP TABLE #NEVER_FILLED              ;
IF OBJECT_ID('tempdb..#FILL_RECORD','U') IS NOT NULL                 DROP TABLE #FILL_RECORD               ;
IF OBJECT_ID('tempdb..#FILL_DTTM','U') IS NOT NULL                   DROP TABLE #FILL_DTTM                 ;
IF OBJECT_ID('tempdb..#FILL_NBR','U') IS NOT NULL                    DROP TABLE #FILL_NBR                  ;
IF OBJECT_ID('tempdb..#FINAL_STATUS','U') IS NOT NULL                DROP TABLE #FINAL_STATUS              ;
IF OBJECT_ID('tempdb..#ICD_MASTER_LIST','U') IS NOT NULL             DROP TABLE #ICD_MASTER_LIST           ;
IF OBJECT_ID('tempdb..#PATIENT_ICD_CODES_UNCLEAN','U') IS NOT NULL   DROP TABLE #PATIENT_ICD_CODES_UNCLEAN ;
IF OBJECT_ID('tempdb..#PATIENT_ICD_CODES_CLEAN','U') IS NOT NULL     DROP TABLE #PATIENT_ICD_CODES_CLEAN   ;
IF OBJECT_ID('tempdb..#PRE_CLAIM_DETAILS','U') IS NOT NULL           DROP TABLE #PRE_CLAIM_DETAILS         ;
IF OBJECT_ID('tempdb..#PA_REQUIRED','U') IS NOT NULL                 DROP TABLE #PA_REQUIRED               ;
IF OBJECT_ID('tempdb..#PA_DATES','U') IS NOT NULL                    DROP TABLE #PA_DATES                  ;
IF OBJECT_ID('tempdb..#COINSURANCE_AMOUNT','U') IS NOT NULL          DROP TABLE #COINSURANCE_AMOUNT        ;
IF OBJECT_ID('tempdb..#DEDUCTIBLE_AMOUNT','U') IS NOT NULL           DROP TABLE #DEDUCTIBLE_AMOUNT         ;
IF OBJECT_ID('tempdb..#TOTAL_DEDUCTIBLE','U') IS NOT NULL            DROP TABLE #TOTAL_DEDUCTIBLE          ;
IF OBJECT_ID('tempdb..#PATIENT_MAX_OOP','U') IS NOT NULL             DROP TABLE #PATIENT_MAX_OOP           ;
IF OBJECT_ID('tempdb..#CLAIMS_DETAILS_FINAL','U') IS NOT NULL        DROP TABLE #CLAIMS_DETAILS_FINAL      ;
IF OBJECT_ID('tempdb..#PRE_TRACKING_NBR_FIX','U') IS NOT NULL        DROP TABLE #PRE_TRACKING_NBR_FIX      ;
IF OBJECT_ID('tempdb..#TRACKING_NBR_FIX','U') IS NOT NULL            DROP TABLE #TRACKING_NBR_FIX          ;
IF OBJECT_ID('tempdb..#RX_TRANSFER','U') IS NOT NULL                 DROP TABLE #RX_TRANSFER               ;
IF OBJECT_ID('tempdb..#PRIOR_MS_THERAPY','U') IS NOT NULL            DROP TABLE #PRIOR_MS_THERAPY          ;
IF OBJECT_ID('tempdb..#BI_START_DATE','U') IS NOT NULL               DROP TABLE #BI_START_DATE             ;
IF OBJECT_ID('tempdb..#REPORT_UNCLEAN','U') IS NOT NULL              DROP TABLE #REPORT_UNCLEAN            ;
IF OBJECT_ID('tempdb..#REPORT_CLEAN','U') IS NOT NULL                DROP TABLE #REPORT_CLEAN              ;
IF OBJECT_ID('tempdb..#FINAL_REPORT','U') IS NOT NULL                DROP TABLE #FINAL_REPORT              ;


-- SET @TODAY TO @RUNDATE IF IT IS NOT NULL OTHERWISE CURRENT DATE
-- DECLARE @TODAY DATE = isnull(@RUN_DATE,getdate())
-- DECLARE @TODAY DATE = GETDATE()
DECLARE @TODAY DATE = 
CASE 
WHEN @RUN_DATE IS NULL THEN getdate()
WHEN @RUN_DATE = '1900-01-01' THEN getdate()
ELSE @RUN_DATE
END 


--DECLARE @STARTDATE DATE = '2019-10-01'
DECLARE @STARTDATE DATE = CASE	WHEN DATEPART(DW,@TODAY) = 2 --MONDAY
								THEN DATEADD(DAY,-3,@TODAY) --FRIDAY
								ELSE DATEADD(DAY,-1,@TODAY) --YESTERDAY
								END
DECLARE @ENDDATE DATE = DATEADD(DAY,-1,@TODAY)
DECLARE @REPORT_TYPE VARCHAR(10) = 'STATUS'
DECLARE @CLIENT VARCHAR(500) = 'CELGENE'
DECLARE @DRUG VARCHAR(20) = 'ZEPOSIA' --ZEPOSIA

-- VALUE FOR LOG_TRANSACTION SET AS A PARAMETER OF THE USP.
-- DECLARE @LOG_TRANSACTION CHAR(1) = 'Y' --OFFICIALLY LOG REPORT TRANSACTION
-- DECLARE @LOG_TRANSACTION CHAR(1)='N'

SELECT CD.*
INTO #CLIENT_DRUGS
FROM
	Adhoc_Employee_Metrics.dbo.Pharma_Client_Drugs AS CD
WHERE
	CD.CLIENT_NAME = @CLIENT
	AND CD.DRUG = @DRUG
	AND CD.ACTIVE = 1
----------------------------
--TEST PATIENTS
SELECT
	HR.MRN
	,HR.FIRST_NAME
	,HR.LAST_NAME
	,MAX(CAST(TCI.CONFDATE AS DATE)) AS LAST_SHIP_DT
INTO #TEST_PATIENTS
FROM
	CPR_REPORTING.dbo.VIEW_HR AS HR
LEFT JOIN
	CPR_REPORTING.dbo.V_TICKCI AS TCI
ON
	HR.MRN = TCI.MRN
	AND HR.DELFLAG = 0
	AND TCI.DELFLAG = 0
WHERE
	(
	HR.FIRST_NAME LIKE '%TEST%'
	OR HR.LAST_NAME LIKE '%TEST%'
	OR HR.ALERT_C LIKE '%TEST%PATIENT%'
	)
	AND HR.MRN NOT IN ('715202')
GROUP BY
	HR.MRN
	,HR.FIRST_NAME
	,HR.LAST_NAME
HAVING
	MAX(CAST(TCI.CONFDATE AS DATE)) IS NULL
	OR HR.FIRST_NAME LIKE '%EDDIE%' OR HR.FIRST_NAME LIKE '%LESLIE%'
	OR HR.LAST_NAME LIKE '%EDDIE%' OR HR.LAST_NAME LIKE '%LESLIE%'
----------------------------
--GATHER PATIENT SAMPLE TO USE AS CRITERIA FOR VARIOUS TEMP TABLES
SELECT
	OT.MRN
INTO #PATIENT_SAMPLE 
FROM
	CPR_REPORTING.dbo.OT
JOIN
	CPR_REPORTING.dbo.PARTS AS P
ON
	OT.INVNO = P.[NO]
	AND P.ISITRX = 'Y'
	AND P.REVCODE NOT IN ('SHIP','SUP','SUPP')
	AND P.CATTEXT NOT LIKE '%SUPPLY%'
	AND P.INACTIVE = 0
	AND OT.DELFLAG = 0
	AND P.DELFLAG = 0
JOIN
	#CLIENT_DRUGS AS CD
ON
	P.NAME_ LIKE '%'+CD.DRUG+'%'
LEFT JOIN
	#TEST_PATIENTS AS TP
ON
	OT.MRN = TP.MRN
WHERE
	TP.MRN IS NULL
GROUP BY
	OT.MRN
----------------------------
--SHIP DATES
SELECT
	SD.MRN
	,SD.ORDERNO
	,SD.RX_NBR
	,SD.REFILLNUM
	,SD.LABLOGNO
	,SD.DRUG
	,SD.BRAND_NAME
	,SD.FULL_DRUG_NAME
	,SD.QTY_DSPN
	,SD.LOT_NUMBER
	,CASE WHEN SD.DAY_SUPPLY = '' OR SD.DAY_SUPPLY IS NULL THEN 0 ELSE SD.DAY_SUPPLY END AS DAY_SUPPLY
	,SD.SHIP_DT
	,SD.TRACKING_NBR
	,SD.SHIP_METHOD
	,SD.SH_TYPE
	,SD.SH_ADDR
	,SD.SH_CITY
	,SD.SH_STATE
	,SD.SH_ZIP
	,SD.REVCODE
	,SD.INVOICE
	,SD.REPLACEMENT_YN
	--,SD.REVERSED_YN
	,DATEADD(DAY,CASE WHEN SD.DAY_SUPPLY = '' OR SD.DAY_SUPPLY IS NULL THEN 0 ELSE SD.DAY_SUPPLY END,SD.SHIP_DT) AS RX_LAST_THRU_DT
	,DENSE_RANK () OVER (PARTITION BY SD.MRN, SD.ORDERNO, SD.RX_NBR ORDER BY SD.SHIP_DT DESC) AS LAST_SHIP_NBR
	,DENSE_RANK () OVER (PARTITION BY SD.MRN, SD.ORDERNO, SD.RX_NBR ORDER BY SD.SHIP_DT) AS FIRST_SHIP_DT
	,DENSE_RANK () OVER (PARTITION BY SD.MRN ORDER BY SD.SHIP_DT) AS SHIP_LOG_BY_MRN
INTO #ALL_RX_SHIP_DT --DROP TABLE #ALL_RX_SHIP_DT  --SELECT* FROM #ALL_RX_SHIP_DT WHERE ORDERNO = '1003520'
FROM (
	SELECT
		TCI.MRN
		,LAB.ORDERNO
		,LAB.SCRIPTEXT AS RX_NBR
		,LAB.REFILLNUM
		,LAB.CPK_LABLOG AS LABLOGNO
		,LTRIM(RTRIM(UPPER(LOT.LOT))) AS LOT_NUMBER
		,TC.DEFQUANT AS QTY_DSPN
		--THIS DAYS OF SUPPLY FIELD LOOKS THAT THE THERAPY DAYS BEFORE USING DAYS OF SUPPLY
		,CASE	WHEN	 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','') > 
						 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.DAYSSUPP,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/','')
					 AND REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','') <> ''
					 AND REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','') > 0
					 THEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','')
				ELSE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.DAYSSUPP,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','')
				END AS DAY_SUPPLY
		,CASE CHARINDEX(' ',REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ',''),1) WHEN 0 THEN REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ','') ELSE SUBSTRING(REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ',''),1,CHARINDEX(' ',REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ',''),1)-1) END AS DRUG
		,CASE CHARINDEX(' ',UPPER(RTRIM(LTRIM(P.BNAME))),1) WHEN 0 THEN UPPER(RTRIM(LTRIM(P.BNAME))) ELSE SUBSTRING(UPPER(RTRIM(LTRIM(P.BNAME))),1,CHARINDEX(' ',UPPER(RTRIM(LTRIM(P.BNAME))),1)-1) END AS BRAND_NAME
		,LTRIM(RTRIM(UPPER(P.NAME_))) AS FULL_DRUG_NAME
		,UPPER(RTRIM(LTRIM(P.REVCODE))) AS REVCODE
		,MAX(CAST(TCI.CONFDATE AS DATE)) AS SHIP_DT
		,TR.PCKTRACKNO AS TRACKING_NBR
		,TCI.SH_METHOD AS SHIP_METHOD
		,TCI.BILLNO AS INVOICE
		,TCI.SH_TYPE
		,TCI.SH_ADDR
		,TCI.SH_CITY
		,TCI.SH_STATE
		,TCI.SH_ZIP
		,MAX(CASE WHEN PTI.PAYOR LIKE '%REPLACE%' OR PTI.INSURANCE LIKE '%REPLACE%' OR IC.PAYOR LIKE '%REPLACE%' OR IC.ORG LIKE '%REPLACE%' OR L.NOTES LIKE '%REPLACEMENT%' THEN 1 ELSE 0 END) AS REPLACEMENT_YN
		--,MAX(CASE WHEN RP.USABILITY_IND = 1 THEN 1 ELSE 0 END) AS REVERSED_YN --SHIPPED REVERSED SUBSTATUS
	FROM
		CPR_REPORTING.dbo.V_TICKCI AS TCI (NOLOCK)
	JOIN
		#PATIENT_SAMPLE AS PS 
	ON
		TCI.MRN = PS.MRN
		AND TCI.DELFLAG = 0
	JOIN
		CPR_REPORTING.dbo.V_TICKC AS TC (NOLOCK)
	ON
		TCI.TICKNO = TC.TICKNO
		AND TCI.MRN = TC.MRN
		AND TCI.CONFIRMED = 'C'
		AND TCI.DELFLAG = 0
		AND TC.DELFLAG = 0
	JOIN
		CPR_REPORTING.dbo.V_LABLOG AS LAB (NOLOCK)
	ON
		TC.LABLOGNO = LAB.CPK_LABLOG
		AND TC.MRN = LAB.LINK
		AND LAB.REFILLNUM <> ''
		AND LAB.LINE9 NOT LIKE '%VOID%'
		AND LAB.DELFLAG = 0
	JOIN
		CPR_REPORTING.dbo.V_LABELS AS L (NOLOCK)
	ON
		LAB.CFK_LABELS = L.CPK_LABELS
		AND LAB.LINK = L.LINK
		AND L.DELFLAG = 0
	JOIN
		CPR_REPORTING.dbo.V_PARTS AS P (NOLOCK)
	ON
		LAB.INVNO = P.[NO]
		AND P.DELFLAG = 0
	LEFT JOIN
		CPR_REPORTING.DBO.LOTLOG AS LOT (NOLOCK) -- SELECT TOP 1* FROM CPR_REPORTING.DBO.LOTLOG AS LOT
	ON
		LAB.LINK = LOT.LINK
		AND LAB.CPK_LABLOG = LOT.LABLOGNO
		AND LOT.DELFLAG = 0
	LEFT JOIN
		CPR_REPORTING.DBO.TRACKING AS TR --SELECT * FROM CPR_REPORTING.DBO.TICKCI WHERE TICKNO = '1366343'
	ON
		TC.TICKNO = TR.TICKNO
		AND TR.DELFLAG = 0
	LEFT JOIN
		CPR_REPORTING.dbo.V_PATINS AS PTI (NOLOCK)
	ON
		TC.CFK_PATINS = PTI.CPK_PATINS
		AND TC.MRN = PTI.MRN
		AND TC.DELFLAG = 0
		AND PTI.DELFLAG = 0
	LEFT JOIN
		CPR_REPORTING.dbo.V_INSCOMP AS IC (NOLOCK)
	ON
		TC.CFK_INSCOMP = IC.[NO]
		AND TC.DELFLAG = 0
		AND IC.DELFLAG = 0
	LEFT JOIN
		#CLIENT_DRUGS AS CD
	ON
		P.NAME_ LIKE '%'+CD.DRUG+'%'
		AND CD.CLIENT_NAME = @CLIENT
	--LEFT JOIN
	--	#RETURNED_PRODUCTS AS RP
	--ON
	--	TCI.TICKNO = RP.TICKNO
	--	AND TCI.MRN = RP.MRN
	--	AND TCI.DELFLAG = 0
	WHERE
		P.ISITRX = 'Y'
		AND P.REVCODE NOT IN ('SHIP','SUP','SUPP')
		AND P.CATTEXT NOT LIKE '%SUPPLY%'
		AND (P.REVCODE = 'M' OR P.NAME_ LIKE '%'+CD.DRUG+'%')
	GROUP BY
		TCI.MRN
		,LAB.ORDERNO
		,LAB.SCRIPTEXT
		,LAB.REFILLNUM
		,LAB.CPK_LABLOG
		,LTRIM(RTRIM(UPPER(LOT.LOT))) 
		,TCI.BILLNO
		,TC.DEFQUANT
		,TR.PCKTRACKNO 
		,TCI.SH_METHOD 
		,TCI.SH_TYPE
		,TCI.SH_ADDR
		,TCI.SH_CITY
		,TCI.SH_STATE
		,TCI.SH_ZIP
		,CASE	WHEN	 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','') > 
						 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.DAYSSUPP,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/','')
					 AND REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','') <> ''
					 AND REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','') > 0
					 THEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','')
				ELSE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LAB.DAYSSUPP,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','')
				END
		,CASE CHARINDEX(' ',REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ',''),1) WHEN 0 THEN REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ','') ELSE SUBSTRING(REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ',''),1,CHARINDEX(' ',REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ',''),1)-1) END
		,CASE CHARINDEX(' ',UPPER(RTRIM(LTRIM(P.BNAME))),1) WHEN 0 THEN UPPER(RTRIM(LTRIM(P.BNAME))) ELSE SUBSTRING(UPPER(RTRIM(LTRIM(P.BNAME))),1,CHARINDEX(' ',UPPER(RTRIM(LTRIM(P.BNAME))),1)-1) END
		,LTRIM(RTRIM(UPPER(P.NAME_))) 
		,UPPER(RTRIM(LTRIM(P.REVCODE)))
	) AS SD
----------------------------
--REFERRALS RECEIVED
SELECT DISTINCT
	R.CPK_LABELS
	,R.MRN	
	,R.ORDERNO
	,R.LABLOGNO
	,R.REFILLNUM
	,R.RX_WRITTEN_DT
	,R.REFERRAL_RCVD_DTTM
	,R.RX_NBR
	,R.DRUG
	,R.BRAND_NAME
	,R.FULL_DRUG_NAME
	,R.NDC
	,R.RX_CREATE_DTTM
	,R.[REFERRAL SOURCE]
	,R.RX_SIG
	,R.RX_QTY
	,R.DAY_SUPPLY
	,R.AUTHORIZED_REFILLS
	,R.REFILLS_REMAINING
	,R.DAW
	,R.CLIENT_NAME
	,R.PHYSICIAN_ID
INTO #ALL_REFERRALS_UNCLEAN
FROM (
	SELECT
		L.CPK_LABELS 
		,L.LINK AS MRN
		,L.ORDERNO
		,LAB.CPK_LABLOG AS LABLOGNO
		,ISNULL(LAB.REFILLNUM,1) AS REFILLNUM
		,CAST(L.ORIG_RX AS DATE) AS RX_WRITTEN_DT
		,L.SCRIPTEXT AS RX_NBR
		,CASE CHARINDEX(' ',REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ',''),1) WHEN 0 THEN REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ','') ELSE SUBSTRING(REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ',''),1,CHARINDEX(' ',REPLACE(UPPER(RTRIM(LTRIM(P.NAME_))),'ZZ',''),1)-1) END AS DRUG
		,LTRIM(RTRIM(P.BNAME)) AS BRAND_NAME
		,REPLACE(LTRIM(RTRIM(P.NAME_)),'ZZ','') AS FULL_DRUG_NAME
		,P.NDC
		,L.CREATEDON AS RX_CREATE_DTTM
		,OT.CREATEDON AS REFERRAL_RCVD_DTTM
		,RTRIM(LTRIM(UPPER(RTRIM(LTRIM(L.POSIG1)))+' '+UPPER(RTRIM(LTRIM(L.POSIG2)))+' '+UPPER(RTRIM(LTRIM(L.POSIG3))))) AS RX_SIG
		,L.BAGSDISP AS RX_QTY
		,CASE	WHEN	 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(L.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','') > 
						~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/','')
					 AND REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(L.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','') <> ''
					 AND REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(L.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','') > 0
					 THEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(L.RXDAYS,'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'H',''),'I',''),'J',''),'K',''),'L',''),'M',''),'N',''),'O',''),'P',''),'Q',''),'R',''),'S',''),'T',''),'U',''),'V',''),'W',''),'X',''),'Y',''),'Z',''),'*',''),'.',''),'~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','')
				~',''),'!',''),'@',''),'#',''),'$',''),'^',''),'&',''),'(',''),')',''),'+',''),'-',''),'=',''),'{',''),'}',''),'[',''),']',''),'|',''),'\',''),'"',''),':',''),'''',''),';',''),'<',''),',',''),'>',''),'?',''),'/',''),'`','')
				END AS DAY_SUPPLY
		,LTRIM(RTRIM(L.QTYALLOWED)) AS AUTHORIZED_REFILLS				
		,L.DOSESLEFT AS REFILLS_REMAINING
		,L.DAW
		,CASE	WHEN RTRIM(LTRIM(OT.REFERRAL)) = 'HUB' THEN 'HUB'
				ELSE 'DIRECT'
				END AS [REFERRAL SOURCE]
		,CD.CLIENT_NAME
		,L.DOCNO AS PHYSICIAN_ID
	FROM
		CPR_REPORTING.dbo.OT AS OT (NOLOCK)
	JOIN
		CPR_REPORTING.dbo.LABELS AS L (NOLOCK)
	ON
		L.ORDERNO = OT.[NO]
		AND L.LINK = OT.MRN
		AND L.DELFLAG = 0
		AND OT.DELFLAG = 0
	JOIN
		CPR_REPORTING.dbo.V_PARTS AS P (NOLOCK)
	ON
		OT.INVNO = P.[NO]
		AND P.ISITRX = 'Y'
		AND P.REVCODE NOT IN ('SHIP','SUP','SUPP')
		AND P.CATTEXT NOT LIKE '%SUPPLY%'
		AND P.DELFLAG = 0
	LEFT JOIN
		#CLIENT_DRUGS AS CD
	ON
		P.NAME_ LIKE '%'+CD.DRUG+'%'
	LEFT JOIN
		CPR_REPORTING.DBO.V_LABLOG AS LAB (NOLOCK)
	ON
		L.CPK_LABELS = LAB.CFK_LABELS
		AND L.LINK = LAB.LINK
		AND LAB.REFILLNUM <> ''
		AND LAB.LINE9 NOT LIKE '%VOID%'
		AND L.DELFLAG = 0
		AND LAB.DELFLAG = 0
	LEFT JOIN
		CPR_REPORTING.DBO.INSCOMP AS IC (NOLOCK)
	ON
		OT.INSNO = IC.[NO]
		AND IC.DELFLAG = 0
	WHERE
		L.LINK IN (SELECT DISTINCT MRN FROM #PATIENT_SAMPLE)
		AND IC.PAYOR NOT LIKE '%REPLACEMENT%' AND IC.ORG NOT LIKE '%REPLACEMENT%'
		AND (P.REVCODE = 'M' OR P.NAME_ LIKE '%'+CD.DRUG+'%')
	) AS R
----------------------------
--IDENTIFY PRESCRIPTIONS NEVER USED B/C A NEW SCRIPT WAS CREATED (THESE WILL BE EXCLUDED FROM THE MAIN REFERRAL SAMPLE)
SELECT
	A.MRN
	,A.ORDERNO
	,A.RX_NBR
	,A.DRUG
	,A.RX_CREATE_DTTM
	,A.REFERRAL_RCVD_DTTM
	,A.LAST_SHIP_DT AS A_LAST_SHIP_DT
	,L.DISCYN
	,A.[RANK] AS A_RANK
	,B.[RANK] AS B_RANK
	,A.[# SHIPMENTS] AS [A - # SHIPMENTS]
	,B.[# SHIPMENTS] AS [B - # SHIPMENTS]
	,DPA.MRN AS DPA_MRN
	,CASE	WHEN A.[# SHIPMENTS] = 0 AND B.[RANK] IS NOT NULL THEN 0
			WHEN A.[# SHIPMENTS] = 0 AND B.[RANK] IS NULL AND RR.MRN IS NOT NULL THEN 0
			WHEN DPA.MRN IS NOT NULL THEN 0
			WHEN A.RX_NBR = '0010585134' THEN 0 --BENEFITS TERMED PER RX DC REASON ON 2/2/2016, SO THIS SCRIPT SHOULD NEVER HAVE BEEN INCLUDED IN SAMPLE.
			WHEN A.RX_NBR = '0010625665' THEN 0 --CPR GLITCH SINGLE ORDER CREATED WITH TWO RX NUMBERS 
			WHEN A.RX_NBR = '0010628727' THEN 0 --SENT IN ERROR
			--WHEN L.DISCYN = '*' AND A.[# SHIPMENTS] = 0 THEN 0 --3/17/17 9:47AM NRC: I CAN'T EXCLUDE DISCONTINUED SCRIPTS WITH NO SHIPMENTS B/C I WOULD BE EXCLUDING PATIENTS THAT TRANSFERRED TO OTHER PHARMACY
			ELSE 1 
			END AS KEEP_REFERRAL_YN
INTO #REFERRAL_FILTER
FROM 
	(
	SELECT
		AMR.MRN
		,AMR.ORDERNO
		,AMR.RX_NBR
		,AMR.DRUG
		,AMR.RX_CREATE_DTTM
		,AMR.REFERRAL_RCVD_DTTM
		,MAX(ASD.SHIP_DT) AS LAST_SHIP_DT
		,COUNT(ASD.SHIP_DT) AS [# SHIPMENTS]
		,DENSE_RANK() OVER (PARTITION BY AMR.MRN, AMR.DRUG ORDER BY AMR.RX_CREATE_DTTM) AS [RANK]
	FROM
		#ALL_REFERRALS_UNCLEAN AS AMR
	LEFT JOIN
		#ALL_RX_SHIP_DT AS ASD
	ON
		ISNULL(AMR.LABLOGNO,AMR.ORDERNO) = ISNULL(ASD.LABLOGNO,ASD.ORDERNO)
		AND AMR.RX_NBR = ASD.RX_NBR
		AND AMR.MRN = ASD.MRN
	GROUP BY
		AMR.MRN
		,AMR.ORDERNO
		,AMR.RX_NBR
		,AMR.DRUG
		,AMR.RX_CREATE_DTTM
		,AMR.REFERRAL_RCVD_DTTM
	) AS A
LEFT JOIN
	(
	SELECT
		AMR.MRN
		,AMR.ORDERNO
		,AMR.RX_NBR
		,AMR.DRUG
		,AMR.RX_CREATE_DTTM
		,AMR.REFERRAL_RCVD_DTTM
		,MAX(ASD.SHIP_DT) AS LAST_SHIP_DT
		,COUNT(ASD.SHIP_DT) AS [# SHIPMENTS]
		,DENSE_RANK() OVER (PARTITION BY AMR.MRN, AMR.DRUG ORDER BY AMR.RX_CREATE_DTTM) AS [RANK]
	FROM
		#ALL_REFERRALS_UNCLEAN AS AMR
	LEFT JOIN
		#ALL_RX_SHIP_DT AS ASD
	ON
		ISNULL(AMR.LABLOGNO,AMR.ORDERNO) = ISNULL(ASD.LABLOGNO,ASD.ORDERNO)
		AND AMR.RX_NBR = ASD.RX_NBR
		AND AMR.MRN = ASD.MRN
	GROUP BY
		AMR.MRN
		,AMR.ORDERNO
		,AMR.RX_NBR
		,AMR.DRUG
		,AMR.RX_CREATE_DTTM
		,AMR.REFERRAL_RCVD_DTTM
	) AS B
ON
	A.MRN = B.MRN
	AND A.DRUG = B.DRUG
	AND B.[RANK] = (A.[RANK]+1)
JOIN
	CPR_REPORTING.dbo.V_LABELS AS L (NOLOCK)
ON
	A.ORDERNO = L.ORDERNO
	AND A.RX_NBR = L.SCRIPTEXT
	AND A.MRN = L.LINK
	AND L.DELFLAG = 0
LEFT JOIN
	(
	SELECT
		L.LINK AS MRN
		,L.ORDERNO
		,L.SCRIPTEXT AS RX_NBR
	FROM
		CPR_REPORTING.dbo.V_LABELS AS L (NOLOCK)
	JOIN
		CPR_REPORTING.dbo.V_LABLOG AS LAB (NOLOCK)
	ON
		L.CPK_LABELS = LAB.CFK_LABELS
		AND L.LINK = LAB.LINK
		AND L.SCRIPTEXT = LAB.SCRIPTEXT
		AND LAB.REFILLNUM = ''
		AND LAB.LINE9 LIKE '%NEW%RX%NDC%CHANGE%' --A NEW PRESCRIPTION HAS TO GET CREATED WHEN CHANGING THE NDC
		AND L.DELFLAG = 0
		AND LAB.DELFLAG = 0
	WHERE
		L.LINK IN (SELECT DISTINCT MRN FROM #ALL_REFERRALS_UNCLEAN)
	) AS RR --REPLACED PRESCRIPTIONS
ON
	A.ORDERNO = RR.ORDERNO
	AND A.RX_NBR = RR.RX_NBR
	AND A.MRN = RR.MRN
LEFT JOIN
	(
	SELECT DISTINCT MRN FROM CPR_REPORTING.dbo.V_PRONOTES WHERE MRN IN (SELECT DISTINCT MRN FROM #ALL_REFERRALS_UNCLEAN) AND [SUBJECT] LIKE '%DISCHARGE%DUPLICATE%ACCOUNT%'
	) AS DPA --DUPLICATE PATIENT ACCOUNT
ON
	A.MRN = DPA.MRN
----------------------------
--GET MAIN REFERRALS
SELECT DISTINCT
	AMR.*
	,ARS.INVOICE
INTO #ALL_REFERRALS
FROM
	#ALL_REFERRALS_UNCLEAN AS AMR
LEFT JOIN
	#REFERRAL_FILTER AS RF --SELECT* FROM #REFERRAL_FILTER WHERE RX_NBR = '0010625665'
ON
	AMR.MRN = RF.MRN
	AND AMR.ORDERNO = RF.ORDERNO
	AND AMR.RX_NBR = RF.RX_NBR
LEFT JOIN
	#ALL_RX_SHIP_DT AS ARS
ON
	AMR.MRN = ARS.MRN
	AND AMR.ORDERNO = ARS.ORDERNO
	AND AMR.RX_NBR = ARS.RX_NBR
	AND AMR.REFILLNUM = ARS.REFILLNUM
LEFT JOIN
	CPR_REPORTING.DBO.LISTLOG AS LL (NOLOCK)
ON
	AMR.MRN = LL.MRN
	AND AMR.ORDERNO = LL.OTNO
	AND LL.NOTES = 'Moved Zero Refills Order Via Fax To Rx Verification'
WHERE
	RF.KEEP_REFERRAL_YN = 1
	AND LL.OTNO IS NULL ---IDENTIFY ORDERS CREATED IN ERROR BY INTAKE (QUEUE I TO QUEUE 7 MOVEMENT)
----------------------------
--IDENTIFY THE ORDER OF RX DISPENSES TO FIND IF PATIENT SWITCHED THERAPY
SELECT DISTINCT
	AMR.MRN
	,AMR.ORDERNO
	,AMR.RX_NBR
	,AMR.REFILLNUM
	,AMR.LABLOGNO
	,AMR.DRUG
	,AMR.RX_CREATE_DTTM
	,AMR.REFERRAL_RCVD_DTTM
	,ASD.SHIP_DT
	,ASD.RX_LAST_THRU_DT
	,DENSE_RANK() OVER (PARTITION BY AMR.MRN ORDER BY AMR.RX_CREATE_DTTM, ASD.SHIP_DT) AS [FILL ACTIVITY ORDER - NOT BY DRUG]
INTO #FILL_ACTIVITY_ORDER
FROM
	#ALL_REFERRALS AS AMR
LEFT JOIN
	#ALL_RX_SHIP_DT AS ASD
ON
	ISNULL(AMR.LABLOGNO,AMR.ORDERNO) = ISNULL(ASD.LABLOGNO,ASD.ORDERNO)
	AND AMR.MRN = ASD.MRN
----------------------------
SELECT DISTINCT
	A.MRN
	,A.ORDERNO
	,A.RX_NBR
	,A.REFILLNUM
	,A.LABLOGNO
	,A.DRUG
	,B.RX_CREATE_DTTM AS SWITCH_RX_DTTM
	,B.DRUG AS SWITCHED_TO_DRUG
	,A.SHIP_DT
INTO #PATIENT_DRUG_SWITCHES --DROP TABLE #PATIENT_DRUG_SWITCHES
FROM
	#FILL_ACTIVITY_ORDER AS A
LEFT JOIN
	#FILL_ACTIVITY_ORDER AS B
ON
	A.MRN = B.MRN
	AND B.[FILL ACTIVITY ORDER - NOT BY DRUG] = (A.[FILL ACTIVITY ORDER - NOT BY DRUG]+1)
WHERE
	A.DRUG <> B.DRUG
	AND CAST(B.RX_CREATE_DTTM AS DATE) BETWEEN @STARTDATE AND @ENDDATE
----------------------------
--GET INVOICE NUMBER AND REJECTION CODES FOR REFERRALS
SELECT DISTINCT
	NL.BILLNO AS INVOICE
	,NL.MRN
	,NL.INSNO 
	,RS.ORDERNO
	,NR.SHORT_VAL AS SHORT_RX_NBR
	,CASE	WHEN LEN(RTRIM(LTRIM(NR.SHORT_VAL))) > 10 THEN RIGHT(RTRIM(LTRIM(NR.SHORT_VAL)),10)
					WHEN LEN(RTRIM(LTRIM(NR.SHORT_VAL))) = 8 THEN '00'+RTRIM(LTRIM(NR.SHORT_VAL))
					WHEN LEN(RTRIM(LTRIM(NR.SHORT_VAL))) = 9 THEN '0'+RTRIM(LTRIM(NR.SHORT_VAL))
					ELSE RTRIM(LTRIM(NR.SHORT_VAL))
					END AS RX_NBR
	,NR.TRANSNO
	,NL.[SENT] AS CLAIM_SENT_DTTM
	,NL.STATUSRX AS CLAIM_STATUS
	,NL.F511_FB1 AS REJECT_CD	
	,CASE	
			WHEN UPPER(RTRIM(LTRIM(NE.TEXT_))) IS NOT NULL AND UPPER(RTRIM(LTRIM(NE.TEXT_))) <> '' THEN UPPER(RTRIM(LTRIM(NE.TEXT_)))
			WHEN NE.TEXT_ IS NULL AND NL.F504_F4 <> '' AND NL.F504_F4 IS NOT NULL THEN UPPER(RTRIM(LTRIM(NL.F504_F4)))
			WHEN NE.TEXT_ IS NULL AND (NL.F504_F4 = '' OR NL.F504_F4 IS NULL) AND NL.F526_FQ IS NOT NULL THEN UPPER(RTRIM(LTRIM(NL.F526_FQ)))
			END AS REJECTION
	,NL.F511_FB2 AS REJECT_CD2
	,LTRIM(RTRIM(NE2.TEXT_)) AS REJECTION2
INTO #CLAIM_RESPONSES --DROP TABLE #CLAIM_RESPONSES
FROM
	CPR_REPORTING.DBO.V_NCPDPL AS NL (NOLOCK)
JOIN
	CPR_REPORTING.DBO.NCPDP AS N
ON
	NL.MRN = N.MRN
	AND NL.BILLNO = N.BILLNO
	AND NL.INSNO = N.INSNO
JOIN
	CPR_REPORTING.dbo.V_NCPDPREPS AS NR (NOLOCK)
ON
	NL.MRN = NR.MRN
	AND NL.BILLNO = NR.BILLNO
	AND NL.DELFLAG = 0
	AND NR.FIELDNAME = 'D2' --RX NUMBER FIELD
	AND NR.DELFLAG = 0
JOIN
	#ALL_REFERRALS AS RS
ON
	N.MRN = RS.MRN
	AND N.RXNO = RS.RX_NBR
	--AND RS.RX_NBR = CASE	WHEN LEN(RTRIM(LTRIM(NR.SHORT_VAL))) > 10 THEN RIGHT(RTRIM(LTRIM(NR.SHORT_VAL)),10)
	--				WHEN LEN(RTRIM(LTRIM(NR.SHORT_VAL))) = 8 THEN '00'+RTRIM(LTRIM(NR.SHORT_VAL))
	--				WHEN LEN(RTRIM(LTRIM(NR.SHORT_VAL))) = 9 THEN '0'+RTRIM(LTRIM(NR.SHORT_VAL))
	--				ELSE RTRIM(LTRIM(NR.SHORT_VAL))
	--				END
LEFT JOIN
	CPR_REPORTING.dbo.V_NCPDPREPS AS RD (NOLOCK) --REJECTION DETAILS
ON
	NL.BILLNO = RD.BILLNO
	AND NL.MRN = RD.MRN
	AND NL.INSNO = RD.INSNO
	AND NL.DELFLAG = 0
	AND RD.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.dbo.NCPDPERR AS NE (NOLOCK)
ON
	NL.F511_FB1 = NE.CODE_
	AND NE.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.dbo.NCPDPERR AS NE2 (NOLOCK)
ON
	NL.F511_FB2 = NE2.CODE_
	AND NE2.DELFLAG = 0
WHERE
	CAST(NL.[SENT] AS DATE) BETWEEN @STARTDATE AND @ENDDATE
----------------------------
--CLAIM DATA STATUS
SELECT 
	C.MRN
	,C.ORDERNO
	,C.RX_NBR
	,C.INVOICE
	,'CLAIM' AS [SOURCE]
	,C.STATUS_DTTM
	,C.[STATUS]
	,C.SUB_STATUS_DESC
INTO #CLAIMS
FROM
	(SELECT DISTINCT
		CD.MRN
		,CD.ORDERNO
		,CD.RX_NBR
		,CD.INVOICE
		,CD.CLAIM_SENT_DTTM AS STATUS_DTTM
		,CONCAT(CD.REJECTION,'/',CD.REJECTION2) AS [STATUS]
		,CASE	WHEN CD.CLAIM_STATUS = 'P' THEN 'BI - Benefits Verification Completed-No PA Required'  
				WHEN CD.CLAIM_STATUS = 'R' THEN
				CASE	WHEN CD.REJECTION IN ('PRIOR AUTHORIZATION IN PROCESS') THEN 'PA - PA Started'
						WHEN CD.REJECTION IN ('(FUTURE USE)','REFILL TOO SOON') THEN 'Refill too Soon'
						WHEN CD.REJECTION IN ('NON-MATCHED PHARMACY NUMBER','PHARMACY NOT CONTRACTED WITH PLAN ON DATE OF SERVICE','M/I PHARMACY NUMBER') THEN 'Triaged to other SP'															
						WHEN CD.REJECTION IN ('PATIENT IS NOT COVERED','PATIENT AGE EXCEEDS MAXIMUM AGE','FILLED BEFORE COVERAGE EFFECTIVE','FILLED AFTER COVERAGE EXPIRED','FILLED AFTER COVERAGE TERMINATED') THEN 'Insurance Change - Reverifying Benefits'														
						WHEN CD.REJECTION IN ('PLAN LIMITATIONS EXCEEDED','COST EXCEEDS MAXIMUM','M/I PRIOR AUTHORIZED NUMBER ASSIGNED','M/I AUTHORIZATION NUMBER','PRIOR AUTHORIZATION NOT REQUIRED','ACTIVE PRIOR AUTHORIZATION EXISTS RESUBMIT AT EXPIRATION OF P/A','AUTHORIZATION NUMBER NOT FOUND','PRIOR AUTHORIZATION DENIED','CLAIM SUBMITTED DOES NOT MATCH P/A','PRIOR AUTHORIZATION REQUIRED','PA EXHAUSTED/NOT RENEWABLE') OR REJECTION LIKE '%PA%REQ%' OR REJECTION LIKE '%PRIOR%AUTH%' THEN 'PA  - PA Denied'				
						WHEN CD.REJECTION LIKE '%M/I%' AND (CD.REJECTION LIKE '%PATIENT%' OR CD.REJECTION LIKE '%CARDHOLDER%') THEN 'Enrollment Missing Info - Waiting on Patient'
						WHEN CD.REJECTION IN ('M/I HOME PLAN','NON-MATCHED GROUP NUMBER','NON-MATCHED CARDHOLDER ID','NON-MATCHED PERSON CODE','PATIENT/CARD HOLDER  ID NAME MISMATCH') THEN 'Enrollment Missing Info - Waiting on Patient'
						WHEN CD.REJECTION LIKE '%M/I%' OR CD.REJECTION LIKE '%NON-MATCHED%' THEN 'Enrollment Missing Info - Waiting on HCP'
						WHEN CD.REJECTION IN ('DRUG-DIAGNOSIS MISMATCH','INSTITUTIONALIZED PATIENT. NDC NOT COVERED','SUPPORTING DOCUMENTATION REQUIRED') THEN 'Enrollment Missing Info - Waiting on HCP'
						WHEN CD.REJECTION2 IN ('(FUTURE USE)','REFILL TOO SOON') THEN 'Refill too Soon'						
						WHEN CD.REJECTION2 IN ('NON-MATCHED PHARMACY NUMBER','PHARMACY NOT CONTRACTED WITH PLAN ON DATE OF SERVICE','M/I PHARMACY NUMBER') THEN 'Triaged to other SP'																						
						WHEN CD.REJECTION2 IN ('PATIENT IS NOT COVERED','PATIENT AGE EXCEEDS MAXIMUM AGE','FILLED BEFORE COVERAGE EFFECTIVE','FILLED AFTER COVERAGE EXPIRED','FILLED AFTER COVERAGE TERMINATED') THEN 'Insurance Change - Reverifying Benefits'																						
						WHEN CD.REJECTION2 IN ('PLAN LIMITATIONS EXCEEDED','COST EXCEEDS MAXIMUM','M/I PRIOR AUTHORIZED NUMBER ASSIGNED','M/I AUTHORIZATION NUMBER','PRIOR AUTHORIZATION NOT REQUIRED','ACTIVE PRIOR AUTHORIZATION EXISTS RESUBMIT AT EXPIRATION OF P/A','AUTHORIZATION NUMBER NOT FOUND','PRIOR AUTHORIZATION DENIED','CLAIM SUBMITTED DOES NOT MATCH P/A','PRIOR AUTHORIZATION REQUIRED','PA EXHAUSTED/NOT RENEWABLE') THEN 'PA  - PA Denied'						
						ELSE 'Other' 
				END
				END AS SUB_STATUS_DESC
			,CASE WHEN DENSE_RANK () OVER (PARTITION BY CD.MRN, CD.ORDERNO, CAST(CD.CLAIM_SENT_DTTM AS DATE) ORDER BY CD.CLAIM_SENT_DTTM DESC) = 1 THEN 1 ELSE 0 END AS [LAST RECORD]
	FROM
		#CLAIM_RESPONSES AS CD
	WHERE
		(CD.CLAIM_STATUS = 'P'
		OR (CD.CLAIM_STATUS = 'R' AND LTRIM(RTRIM(CD.REJECTION)) NOT IN ('','EK')))
		--AND CAST(CD.CLAIM_SENT_DTTM AS DATE) BETWEEN @STARTDATE AND @ENDDATE
	) AS C
----------------------------
--QUEUE LOCATION
SELECT 
	QL.MRN
	,QL.ORDERNO
	,QL.[SOURCE]
	,QL.STATUS_DTTM
	,QL.[STATUS]
	,QL.SUB_STATUS_DESC
INTO #QUEUE_LOCATION
FROM
	(SELECT DISTINCT
		LL.MRN
		,LL.OTNO AS ORDERNO
		,'QUEUE LOCATION' AS [SOURCE]
		,LL.LOGDATE AS STATUS_DTTM
		,LL.NEWLISTID AS [STATUS]
		,CASE
		--QUEUE LOCATION
			--BENEFITS INVESTIGATION 
			WHEN LL.NEWLISTID IN ('SRX-CLAIMSNEW','SRX-BENEFITNEW') THEN 'Enrollment  Complete - BI Ready'
			WHEN LL.NEWLISTID IN ('SRX-CLAIMSREFILLS','SRX-BENEFITREFILLS') THEN 'BI - Benefits Verification Started'
			--RX READY FOR SHIPMENT, BUT NOT YET SHIPPED
			WHEN LL.NEWLISTID LIKE '%PRINTLBL%' OR LL.NEWLISTID LIKE '%RXTOFILL%' THEN 'Shipment scheduled'
			--PRIOR AUTHORIZATION
			WHEN LL.NEWLISTID IN ('SRX-EXCEPTIONS') THEN 'PA - PA Started'
			WHEN LL.OLDLISTID IN ('SRX-EXCEPTIONS') THEN 'PA - PA Approved'
			--NEW REFERRAL
			WHEN LL.NEWLISTID IN ('SRX-ORDERS','H-ORDERS') THEN 'Enrollment Started - Data Entry Started' 
			WHEN LL.NEWLISTID LIKE '%RXSETUP%' THEN 'Enrollment Started - Data Entry Started' 
			WHEN LL.NEWLISTID IN ('SRX-RXVERIFY') THEN 'BI - Benefits Verification Completed-No PA Required'
			--PATIENT CONTACT
			WHEN LL.NEWLISTID LIKE '%CONTNEW%' OR LL.NEWLISTID LIKE '%CONTREFILL%' OR LL.NEWLISTID IN ('H-NEWORDER') THEN 'Waiting on patient SHIP DATE decision' --Waiting on Patient Contact
			--COMPLETED REFILLS
			WHEN LL.NEWLISTID LIKE '%ZEROREFILLS%' OR LL.NEWLISTID LIKE '%ZREFILLS%' THEN 'No refills remaining'
			--OTHER
			WHEN LL.NEWLISTID LIKE '%RXS2CANCEL%' OR LL.NEWLISTID LIKE '%DC%' THEN 'Other'
			END AS SUB_STATUS_DESC
		,CASE WHEN DENSE_RANK () OVER (PARTITION BY LL.MRN, LL.OTNO, CAST(LL.LOGDATE AS DATE) ORDER BY LL.LOGDATE DESC) = 1 THEN 1 ELSE 0 END AS [LAST RECORD]
	FROM
		CPR_REPORTING.DBO.V_LISTLOG AS LL (NOLOCK)
	JOIN
		#ALL_REFERRALS AS AR
	ON
		LL.MRN = AR.MRN
		AND LL.OTNO = AR.ORDERNO
		AND LL.DELFLAG = 0
	WHERE
		LTRIM(RTRIM(LL.NEWLISTID)) NOT IN ('','eRX')
		AND CAST(LL.LOGDATE AS DATE) BETWEEN @STARTDATE AND @ENDDATE
	) AS QL
----------------------------
--LAST EVENT
SELECT
	LE.MRN
	,LE.ORDERNO
	,LE.[SOURCE]
	,LE.STATUS_DTTM
	,LE.[STATUS]
	,LE.SUB_STATUS_DESC
INTO #LAST_EVENT 
FROM (
	SELECT DISTINCT
		OT.MRN
		,T.TABLE_ID AS ORDERNO
		,'LAST EVENT' AS [SOURCE]
		,T.CHANGEDDATE AS STATUS_DTTM	
		,LE.TEXT_ AS [STATUS] 
		,CASE	WHEN LE.TEXT_ IN ('Need Labs','PENDING LAB DOCUMENTS') THEN 'PA - Waiting on HCP'
				WHEN LE.TEXT_ IN ('Pending Appeal') THEN 'PA Appeal - Started'
				WHEN LE.TEXT_ IN ('REFILL TOO SOON','Update Next Refill Date - See Notes') THEN 'Refill too Soon'
				WHEN LE.TEXT_ IN ('INSURANCE COVERAGE TERMINATED-1','INSURANCE COVERAGE TERMINATED-2','INSURANCE COVERAGE TERMINATED-3') THEN 'Insurance Change - Reverifying Benefits'
				WHEN LE.TEXT_ IN ('Faxed - 1st attempt','Faxed - 2nd attempt','Faxed - 3rd attempt','Faxed - 4th Attempt','Faxed - 5th Attempt') THEN 'PA - PA Missing Documentation'
				WHEN LE.TEXT_ IN ('Pt canceled order','Reverse Claim D/C Patient','Reverse Claim D/C Order') THEN 'Patient Choice - Other'
				WHEN LE.TEXT_ IN ('Future Fill','Pt. stop treatment will call when needed','Hold - Per Patient') THEN 'Shipment Delayed - Patient has supply on hand'
				WHEN LE.TEXT_ IN ('Pt. is using other pharmacy','PT. MUST FILL WITH ACCREDO','Transfer to NY Pharmacy') THEN 'Triaged to other SP '
				WHEN LE.TEXT_ IN ('Pending MDO call back','NON-COMPLIANT MDO','MDO Refill Call - 1st Attempt','MDO Refill Call - 2nd Attempt') THEN 'Waiting on HCP response'
				WHEN LE.TEXT_ IN ('Profiled New Rx','Pending/ Being worked on','Pending Set - up','Prescription in Process') THEN 'Enrollment Started - Data Entry Started'
				WHEN LE.TEXT_ IN ('Authorization Received','reSET- Auth Code Obtained','reSET- Pending Auth Code','Payable Claim') THEN 'PA - PA Approved'
				WHEN LE.TEXT_ IN ('Process Secondary') OR LE.TEXT_ LIKE 'PAP Enrollment%' THEN 'Copay Assistance Pending'
				WHEN LE.TEXT_ IN ('Authorization in Process') THEN 'PA - PA Started'
				WHEN LE.TEXT_ IN ('Faxed Health Plan','Faxed Pharmacy Benefit Manager','Pending Rx on Review by Insurance','Pending  Overide from/Ins plan-1',
								'Emailed Health Plan','Called Health Plan','Medicaid-Share of Cost-Pending Override','Authorization not yet in effect')
								OR LE.TEXT_ LIKE '%Pending  Overide from/Ins plan%' OR LE.TEXT_ LIKE '%Faxed Vista%' OR LE.TEXT_ LIKE '%Payer Matrix - Pending%'
								THEN 'PA - Waiting on Payer'
				WHEN LE.TEXT_ IN ('Plan Limitation','PPA Required','PLAN LIMITATIONS EXCEEDED','Synagis/Auth Required','Prior Auth Required ***','Authorization Required','Vista PA Required','Pharmacy Approval Required-2','Pharmacy Approval Required-3') THEN 'PA - PA Denied'
				WHEN LE.TEXT_ IN ('COINS COLLECT') OR LE.TEXT_ LIKE '%Money Hold Rx%' OR LE.TEXT_ LIKE '%Share of Cost%' OR LE.TEXT_ LIKE '%Hold -Benefits Grace Period%' THEN 'Financial Reason'
				WHEN LE.TEXT_ IN ('Pending- Incomplete Demographic info','Pending Up-Dated Demographics') THEN 'Enrollment Missing Info - Waiting on Patient'
				WHEN LE.TEXT_ LIKE '%Pending Correct Ins. Info%' OR LE.TEXT_ LIKE '%Medical Patient Consent%' THEN 'Enrollment Missing Info - Waiting on Patient'
				WHEN LE.TEXT_ IN ('1ST ATTEMPT','2ND ATTEMPT','3RD ATTEMPT','4TH ATTEMPT','5TH ATTEMPT','Pending patient call back-1','Ready') THEN 'Waiting on patient SHIP DATE decision'
				WHEN LE.TEXT_ LIKE '%Rescheduling Delivery%' THEN 'Waiting on patient SHIP DATE decision'
				WHEN LE.TEXT_ IN ('Phone Busy/ Disconnected','Phone - Out of Service','Phone - Line Busy','Round Two - Call to MD - Non-Compliant Patient','PT TEL INCORRECT/MISSING','PENDING PT''S ALTERNATE CONTACT #','REACHED OUT TO PT W STATUS','Return call','Phone number changed or disconnected','Patient Contact') THEN 'Waiting / Unable to contact patient'
				WHEN LE.TEXT_ LIKE 'Pending patient call back%' THEN 'Waiting / Unable to contact patient'
				WHEN LE.TEXT_ IN ('Need 90ds Script','RX MH  md sign','Need Hard Copy','eRx Denied','Authorization and Rx Required','Inbound Transfer Required','Cover Sheet Required') THEN 'Waiting on new RX from physician'
				WHEN LE.TEXT_ LIKE 'NY Rx needed%' OR LE.TEXT_ LIKE '%Pending RX%' OR LE.TEXT_ LIKE '%RX%PENDING%' THEN 'Waiting on new RX from physician'
				WHEN LE.TEXT_ LIKE 'HP - Enrollment Pending%' OR LE.TEXT_ LIKE 'Intake: Follow-up Needed%' OR LE.TEXT_ LIKE 'Internal F/U Needed- Missing Info%' 
								OR LE.TEXT_ LIKE 'Missing Dx Code%' OR LE.TEXT_ LIKE 'Missing Information%' OR LE.TEXT_ LIKE 'Pending ICD-10 Code%' 
								OR LE.TEXT_ IN ('Verify with MD','Waiting for Clarification') THEN 'Enrollment Missing Info - Waiting on HCP'
				ELSE 'Other'
				END AS SUB_STATUS_DESC
			,CASE WHEN DENSE_RANK () OVER (PARTITION BY OT.MRN, T.TABLE_ID, CAST(T.CHANGEDDATE AS DATE) ORDER BY T.CHANGEDDATE DESC) = 1 THEN 1 ELSE 0 END AS [LAST RECORD]
	FROM
		CPR_REPORTING.dbo.V_TRANS AS T (NOLOCK)
	JOIN
		CPR_REPORTING.dbo.V_POPUPDATA AS LE (NOLOCK)
	ON
		T.FLD_IS = LE.CPK_POPUPDATA
		AND T.DELFLAG = 0
		AND LE.DELFLAG = 0
	JOIN
		CPR_REPORTING.dbo.OT (NOLOCK)
	ON
		T.TABLE_ID = OT.[NO]
		AND T.DELFLAG = 0
		AND OT.DELFLAG = 0
	JOIN
		#ALL_REFERRALS AS AMR (NOLOCK)
	ON
		OT.[NO] = AMR.ORDERNO
		AND OT.MRN = AMR.MRN
		AND OT.DELFLAG = 0
	WHERE
		CAST(T.CHANGEDDATE AS DATE) BETWEEN @STARTDATE AND @ENDDATE
		AND T.TBLNAME = 'OT'
		AND T.FLD_NAME = 'CFK_POPUPDATA_ENTSTATUS_LASTEVENT'
	) AS LE
----------------------------
--DISCONTINUED ORDER SAMPLE
SELECT DISTINCT
	AR.MRN
	,AR.ORDERNO
	,AR.RX_NBR
	,CASE	WHEN LL.NEWLISTID IN ('SRX-ZEROREFILLS','ZREFILLS') THEN 1 ELSE 0 END AS [ZERO REFILLS]
	,CASE	WHEN LAB.SCRIPTEXT IS NOT NULL THEN LAB.CREATEDON ELSE LL.LOGDATE END AS DC_DTTM
	,CASE	WHEN LAB.ORDERNO IS NOT NULL THEN 1
			WHEN OT.[NO] IS NOT NULL THEN 1
			WHEN L.ORDERNO IS NOT NULL THEN 1
			ELSE 0 END AS [DISCONTINUED YN]
INTO #DISCONTINUED_ORDERS_SAMPLE --DROP TABLE #DISCONTINUED_ORDERS  --SELECT* FROM #DISCONTINUED_ORDERS WHERE orderno = 996467
FROM
	#ALL_REFERRALS AS AR
LEFT JOIN
	CPR_REPORTING.DBO.LABLOG AS LAB (NOLOCK)
ON
	AR.MRN = LAB.LINK
	AND AR.ORDERNO = LAB.ORDERNO
	AND AR.RX_NBR = LAB.SCRIPTEXT
	AND LAB.LINE9 LIKE '%DISCONTINUED%'
	AND LAB.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.DBO.OT (NOLOCK)
ON
	AR.MRN = OT.MRN
	AND AR.ORDERNO = OT.[NO]
	AND LTRIM(RTRIM(OT.LISTID)) IN ('SRX-RXS2CANCEL')
	AND OT.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.DBO.LABELS AS L (NOLOCK)
ON
	AR.MRN = L.LINK
	AND AR.ORDERNO = L.ORDERNO
	AND AR.RX_NBR = L.SCRIPTEXT
	AND L.DISCYN = '*'
	AND L.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.DBO.LISTLOG AS LL (NOLOCK)
ON
	AR.ORDERNO = LL.OTNO
	AND LL.NEWLISTID IN ('DC','SRX-RXS2CANCEL','SRX-ZEROREFILLS','ZREFILLS')
	AND LL.DELFLAG = 0
----------------------------
--DC REASON ADDED
SELECT DISTINCT
	DO.MRN
	,DO.ORDERNO
	,DO.RX_NBR
	,DO.DC_DTTM
	,LAB.LINE9 AS DETAILS
	,LTRIM(RTRIM(
		CASE WHEN [ZERO REFILLS] = 1 THEN 'REFILLS EXHAUSTED' ELSE LTRIM(RTRIM(CASE	WHEN
			(CASE WHEN LAB.LINE9 LIKE '%PT. DC%' THEN SUBSTRING(LAB.LINE9,CHARINDEX('PT. DC''D',LAB.LINE9)+LEN('PT. DC''D'),LEN(LAB.LINE9))
			ELSE SUBSTRING(LAB.LINE9,34,LEN(LAB.LINE9)) END) = '' 
			THEN 
			(CASE WHEN PN.[SUBJECT] LIKE '%DISCHARGE PATIENT%' THEN LTRIM(RTRIM(PN.BODY)) ELSE
			SUBSTRING(PN.[SUBJECT],CHARINDEX('PATIENT DISCHARGED -',PN.[SUBJECT])+LEN('PATIENT DISCHARGED -'),LEN(PN.[SUBJECT]))
			END)
			ELSE 
			(CASE WHEN LAB.LINE9 LIKE '%PT. DC%' THEN SUBSTRING(LAB.LINE9,CHARINDEX('PT. DC''D',LAB.LINE9)+LEN('PT. DC''D'),LEN(LAB.LINE9))
			ELSE SUBSTRING(LAB.LINE9,CHARINDEX(' ',LAB.LINE9,24),LEN(LAB.LINE9)) END)
			END))
			END)) AS DC_REASON
INTO #DC_DETAILS --DROP TABLE #DC_DETAILS
FROM
	#DISCONTINUED_ORDERS_SAMPLE AS DO
LEFT JOIN
	CPR_REPORTING.DBO.LABLOG AS LAB (NOLOCK)
ON
	DO.RX_NBR = LAB.SCRIPTEXT
	AND LAB.LINE9 LIKE '%DISCONTINUED%'
LEFT JOIN
	CPR_REPORTING.DBO.LISTLOG AS LL (NOLOCK)
ON
	DO.MRN = LL.MRN
	AND DO.ORDERNO = LL.OTNO
	AND LL.DELFLAG = 0
	AND LL.NOTES = 'Moved Zero Refills Order Via Fax To Rx Verification' --EXCLUDE (INCORRECT MOVEMENT FROM DC TO PV1 BY INTAKE)
LEFT JOIN
	CPR_REPORTING.DBO.PRONOTES AS PN (NOLOCK)
ON
	DO.MRN = PN.MRN
	AND PN.[SUBJECT] LIKE '%DISCHARGE%'
WHERE
	[DISCONTINUED YN] = 1
	AND LL.OTNO IS NULL
	AND	CAST(DO.DC_DTTM AS DATE) BETWEEN @STARTDATE AND @ENDDATE
ORDER BY
	RX_NBR
----------------------------
--DISCONTINUED ORDER STATUS
SELECT
	DC.*
INTO #DISCONTINUED_FINAL --DROP TABLE #DISCONTINUED  SELECT* FROM #DISCONTINUED WHERE ORDERNO = 996467
FROM
	(SELECT DISTINCT
		DC.MRN
		,DC.ORDERNO
		,'DISCONTINUED' AS [SOURCE]
		,DC.DC_DTTM AS STATUS_DTTM
		,DC.DC_REASON AS [STATUS]
		,CASE	WHEN DC.DC_REASON IN ('REFILLS EXHAUSTED','New RX / NDC Change','New Rx / New Order','Prescription Fills Depleted') AND SD.ORDERNO IS NOT NULL THEN 'No refills remaining'
				WHEN DC.DC_REASON IN ('Insurance Termed/Changed','Not Covered/No Benefit Rx','Authorization Denied','Medicare D Plan Changed','Buy and Bill only','Payor Contract Terminated','Insurance in Grace Period','Discharge by Billing','insurance Termed/Change','Margin') THEN 'Coverage Denied'
				WHEN DC.DC_REASON IN ('Non-Compliant MDO') THEN 'HCP unresponsive - Attempts Exhausted'
				WHEN DC.DC_REASON IN ('Copay too High') THEN 'Patient Choice - Financial'
				WHEN DC.DC_REASON IN ('RX D/C by Pt–Side Effects','Pt Choice - Switched Rx','Patient Request','Per Patient Request') THEN 'Patient Choice - Other'
				WHEN DC.DC_REASON IN ('Therapy D/C by Pt') THEN 'Patient Refused Treatment'
				WHEN DC.DC_REASON IN ('Inactive Account>120 days','Inactive Account>90 days','Non-Compliant Patient') THEN 'Patient Unresponsive - Attempts Exhausted'
				WHEN DC.DC_REASON IN ('Per Doctor''s Order','Therapy D/C by MD','Changed to Infusion Tx','Doctor Detailing','Days Supply Change','Dose Change','Device Change') AND SD.ORDERNO IS NOT NULL THEN 'Physician Discontinued'
				WHEN DC.DC_REASON IN ('Per Doctor''s Order','Therapy D/C by MD','Changed to Infusion Tx','Doctor Detailing','Days Supply Change','Dose Change','Device Change') AND SD.ORDERNO IS NULL THEN 'Physician Cancelled'
				WHEN DC.DC_REASON IN ('Using Other Pharmacy','LDD RX via ORTF','Rx transferred to MRx TMO','Triaged to New Pharmacy','Rx transferred to MRx NY','Not a Contracted Provider') THEN 'Triaged to other SP'
				ELSE 'Other'
				END AS SUB_STATUS_DESC
	FROM
		#DC_DETAILS AS DC
	LEFT JOIN	
		#ALL_RX_SHIP_DT AS SD
	ON
		DC.MRN = SD.MRN
		AND DC.ORDERNO = SD.ORDERNO
		AND SD.FIRST_SHIP_DT = 1
	) AS DC
----------------------------
CREATE TABLE #SUB_STATUS_PRE (MRN INT, ORDERNO INT, [SOURCE] VARCHAR(50), STATUS_DTTM DATETIME, [STATUS] VARCHAR(100), SUB_STATUS_DESC VARCHAR(100))
INSERT INTO #SUB_STATUS_PRE
SELECT MRN, ORDERNO, [SOURCE], STATUS_DTTM, [STATUS], SUB_STATUS_DESC FROM #QUEUE_LOCATION
INSERT INTO #SUB_STATUS_PRE
SELECT MRN, ORDERNO, [SOURCE], STATUS_DTTM, [STATUS], SUB_STATUS_DESC FROM #LAST_EVENT
INSERT INTO #SUB_STATUS_PRE
SELECT MRN, ORDERNO, [SOURCE], STATUS_DTTM, [STATUS], SUB_STATUS_DESC FROM #DISCONTINUED_FINAL
INSERT INTO #SUB_STATUS_PRE
SELECT MRN, ORDERNO, 'SHIPPED' AS [SOURCE] , CAST(SHIP_DT AS DATETIME) AS STATUS_DTTM,'ACTIVE' AS [STATUS], 'Shipped' AS SUB_STATUS_DESC FROM #ALL_RX_SHIP_DT WHERE SHIP_DT BETWEEN @STARTDATE AND @ENDDATE
INSERT INTO #SUB_STATUS_PRE
SELECT MRN, ORDERNO, [SOURCE], STATUS_DTTM, [STATUS], SUB_STATUS_DESC FROM #CLAIMS
INSERT INTO #SUB_STATUS_PRE
SELECT MRN, ORDERNO, 'DRUG SWITCH' AS [SOURCE], SWITCH_RX_DTTM AS STATUS_DTTM, SWITCHED_TO_DRUG AS [STATUS], 'Switched to competitor product' AS SUB_STATUS_DESC FROM #PATIENT_DRUG_SWITCHES
----------------------------
SELECT DISTINCT
	SS.MRN
	,SS.ORDERNO
	,SS.[SOURCE]
	,SS.STATUS_DTTM
	,SS.[STATUS]
	,SS.SUB_STATUS_DESC
INTO #SUB_STATUS --DROP TABLE #SUB_STATUS --SELECT* FROM #SUB_STATUS WHERE ORDERNO = '1001030'
FROM
	(SELECT DISTINCT
		D.MRN
		,D.ORDERNO
		,D.[SOURCE]
		,D.STATUS_DTTM
		,DC.DC_DTTM 
		,SH.SHIP_DT
		,D.[STATUS] AS STATUS_DESC
		,D.SUB_STATUS_DESC
		,CASE
			WHEN D.SUB_STATUS_DESC IN ('Shipped') THEN 'ACTIVE'
			WHEN (D.[SOURCE] IN ('DISCONTINUED','DRUG SWITCH') OR D.SUB_STATUS_DESC IN ('Triaged to other SP','Patient Choice - Other')) AND SH.ORDERNO IS NULL THEN 'CANCELLED'
			WHEN (D.[SOURCE] IN ('DISCONTINUED','DRUG SWITCH') OR D.SUB_STATUS_DESC IN ('Triaged to other SP','No refills remaining','Patient Choice - Other')) AND SH.ORDERNO IS NOT NULL THEN 'DISCONTINUED'
			WHEN D.[SOURCE] IN ('QUEUE LOCATION','LAST EVENT','CLAIM') THEN 'PENDING'
			END AS [STATUS]
		,CASE	WHEN (DENSE_RANK () OVER (PARTITION BY D.MRN, D.ORDERNO, CAST(D.STATUS_DTTM AS DATE) ORDER BY 
		(CASE WHEN D.SUB_STATUS_DESC = 'Shipped' THEN DATEADD(SS,-1,CAST(DATEADD(DAY,1,D.STATUS_DTTM) AS DATETIME)) ELSE D.STATUS_DTTM END)DESC)) = 1 THEN 1 ELSE 0 END AS KEEP_YN	
	FROM 
		#SUB_STATUS_PRE  AS D
	LEFT JOIN
		#DC_DETAILS AS DC
	ON
		D.MRN = DC.MRN
		AND D.ORDERNO = DC.ORDERNO
	LEFT JOIN
		#ALL_RX_SHIP_DT AS SH --SELECT* FROM #ALL_RX_SHIP_DT
	ON
		D.MRN = SH.MRN
		AND D.ORDERNO = SH.ORDERNO
		AND SH.FIRST_SHIP_DT = 1
	) AS SS
----------------------------
--STATUS AND SUB STATUS DETAILS FOR EACH ORDER (ADD CLIENT STATUS CODES)
SELECT DISTINCT
	SS.*
	,SC.[SUB STATUS CODE] 
	,CASE WHEN DENSE_RANK () OVER (PARTITION BY SS.MRN, SS.ORDERNO,CAST(SS.STATUS_DTTM AS DATE), SS.[STATUS], SC.[SUB STATUS CODE] ORDER BY SS.STATUS_DTTM DESC) = 1 THEN 1 ELSE 0 END AS KEEP_YN
INTO #PRE_FINAL_STATUS --DROP TABLE #PRE_FINAL_STATUS --SELECT * FROM #SUB_STATUS
FROM
	#SUB_STATUS AS SS	
JOIN
	Adhoc_Employee_Metrics.[dbo].[Pharma_Status_Codes] AS SC --SELECT* FROM Adhoc_Employee_Metrics.[dbo].[Pharma_Status_Codes]
ON
	SS.[STATUS] = SC.[STATUS]
	AND SS.SUB_STATUS_DESC = SC.[SUB STATUS]
	AND SC.CLIENT = @CLIENT
ORDER BY
	SC.[SUB STATUS CODE]
----------------------------
/*FILL NUMBER QUERY*/
----------------------------
SELECT DISTINCT
	LL.CPK_LISTLOG
	,LL.MRN
	,LL.OTNO AS ORDERNO
	,L.SCRIPTEXT AS RX_NBR
	,LL.LOGDATE AS LOG_DTTM
	,LL.OLDLISTID AS [EXIT QUEUE]
	,LL.NEWLISTID AS [ENTER QUEUE]
	,DENSE_RANK () OVER (PARTITION BY LL.MRN, LL.OTNO, L.SCRIPTEXT ORDER BY LOGDATE) AS RECORD_NBR
INTO #FILL_NBR_LOG  
FROM
	CPR_REPORTING.DBO.LISTLOG AS LL 
JOIN
	CPR_REPORTING.DBO.LABELS AS L   
ON
	LL.OTNO = L.ORDERNO
	AND LL.DELFLAG = 0
	AND L.DELFLAG = 0
WHERE
	LL.OTNO IN (SELECT ORDERNO FROM #PRE_FINAL_STATUS)
	AND LL.OLDLISTID <> LL.NEWLISTID
----------------------------------
--IDENTIFY FIRST FILL RECORD
SELECT DISTINCT
	LL.CPK_LISTLOG
	,LL.MRN
	,LL.ORDERNO
	,LL.RX_NBR
	,LOG_DTTM
	,[EXIT QUEUE]
	,[ENTER QUEUE]
	,DENSE_RANK () OVER (PARTITION BY MRN, ORDERNO, RX_NBR  ORDER BY LOG_DTTM) AS RECORD_NBR
INTO #FIRST_FILL_RECORD  --SELECT* FROM #FILL_NBR_LOG
FROM
	#FILL_NBR_LOG AS LL
WHERE
	LL.[EXIT QUEUE] IN ('SRX-ORDERS','RXORDER')
	OR LL.[ENTER QUEUE] IN ('SRX-RXSETUP','SRX-BENEFITNEW','SRX-BENEFITREFILLS','SRX-CLAIMSNEW','SRX-CLAIMSREFILLS','RXORDER')
---------------------------
--FILL END
SELECT DISTINCT
	LL.MRN
	,LL.OTNO AS ORDERNO
	,LL.SCRIPTEXT AS RX_NBR
	,LL.LOGDATE AS LOG_DTTM
	,OLDLISTID
	,NEWLISTID
INTO #ORDER_FILL_DTTM   --SELECT* FROM #ORDER_FILL_DTTM
FROM
	CPR_REPORTING.DBO.LISTLOG AS LL 
JOIN
	CPR_REPORTING.DBO.LABELS AS L
ON
	LL.OTNO = L.ORDERNO
	AND LL.DELFLAG = 0
	AND L.DELFLAG = 0
WHERE
	LL.OTNO IN (SELECT ORDERNO FROM #FIRST_FILL_RECORD)
	AND
	(
	(LL.OLDLISTID IN ('SRX-RXTOFILL') AND LL.NEWLISTID IN ('DC','SRX-ZEROREFILLS','SRX-CONTREFILLS'))
	OR
	(LL.OLDLISTID IN ('PRINTDT'))
	)
------------------------
--ORDERS WITH AUTO DC
INSERT INTO #ORDER_FILL_DTTM
SELECT DISTINCT
	FFR.MRN
	,FFR.ORDERNO
	,FFR.RX_NBR
	,MAX(FNL.LOG_DTTM) AS LOG_DTTM
	,FNL.[EXIT QUEUE]
	,FNL.[ENTER QUEUE]
FROM
	#FIRST_FILL_RECORD AS FFR
LEFT JOIN
	#ORDER_FILL_DTTM AS OFD
ON
	FFR.MRN = OFD.MRN
	AND FFR.ORDERNO = OFD.ORDERNO
	AND FFR.RX_NBR = OFD.RX_NBR
JOIN
	#FILL_NBR_LOG AS FNL 
ON
	FFR.MRN = FNL.MRN
	AND FFR.ORDERNO = FNL.ORDERNO
	AND FFR.RX_NBR = FNL.RX_NBR
JOIN
	CPR_REPORTING.DBO.LABELS AS L  
ON
	FFR.ORDERNO = L.ORDERNO
	AND L.DELFLAG = 0
	AND L.AUTODC = 1
WHERE
	FNL.[ENTER QUEUE] IN ('SRX-RXTOFILL','RXTOFILL')
	AND OFD.ORDERNO IS NULL
GROUP BY
	FFR.MRN
	,FFR.ORDERNO
	,FFR.RX_NBR
	,FNL.[ENTER QUEUE]
	,FNL.[EXIT QUEUE]

------------------------
--DISCONTINUED
SELECT DISTINCT
	LAB.LINK AS MRN
	,LAB.ORDERNO
	,LAB.SCRIPTEXT AS RX_NBR
	,LAB.CREATEDON AS DC_DTTM
	,LAB.LINE9
INTO #DC_DTTM --DROP TABLE #DC_DTTM --SELECT* FROM #DC_DTTM
FROM
	CPR_REPORTING.DBO.LABLOG AS LAB
JOIN
	CPR_REPORTING.DBO.LABELS AS L
ON
	LAB.LINK = L.LINK
	AND LAB.SCRIPTEXT = L.SCRIPTEXT
	AND LAB.ORDERNO = L.ORDERNO
	AND LAB.DELFLAG = 0
	AND L.DELFLAG = 0
WHERE
	L.DISCYN = '*'
	AND L.ORDERNO IN (SELECT ORDERNO FROM #FIRST_FILL_RECORD)
	AND LAB.LINE9 LIKE '%DISCONT%'
------------------------
--ORDERS THAT WERE NEVER FILLED ADD DC TIME TO LAST FILL END
SELECT DISTINCT
	FFR.MRN
	,FFR.ORDERNO
	,FFR.RX_NBR
	,CASE WHEN OT.[STATUS] LIKE '%DC%' OR OT.LISTID LIKE '%DC%' OR OT.LISTID = 'SRX-RXS2CANCEL' THEN LL.LOGDATE ELSE GETDATE() END AS LOG_DTTM
	,LL.OLDLISTID
	,LL.NEWLISTID
	,CASE	WHEN DENSE_RANK () OVER (PARTITION BY FFR.MRN, FFR.ORDERNO, FFR.RX_NBR ORDER BY LL.LOGDATE DESC) = 1 
				AND DC.ORDERNO IS NOT NULL
				AND DC.DC_DTTM > CASE WHEN OT.[STATUS] LIKE '%DC%' OR OT.LISTID LIKE '%DC%' OR OT.LISTID = 'SRX-RXS2CANCEL' THEN LL.LOGDATE ELSE GETDATE() END 
				THEN DC.DC_DTTM 
				ELSE CASE WHEN OT.[STATUS] LIKE '%DC%' OR OT.LISTID LIKE '%DC%' OR OT.LISTID = 'SRX-RXS2CANCEL' THEN LL.LOGDATE ELSE GETDATE() END 
				END AS LAST_LOG_DTTM
	,DENSE_RANK () OVER (PARTITION BY FFR.MRN, FFR.ORDERNO, FFR.RX_NBR ORDER BY LL.LOGDATE DESC) AS LAST_RECORD_NBR
INTO #NEVER_FILLED --DROP TABLE #NEVER_FILLED --SELECT* FROM #NEVER_FILLED --SELECT* FROM #FIRST_FILL_RECORD
FROM
	#FIRST_FILL_RECORD AS FFR
LEFT JOIN
	#ORDER_FILL_DTTM AS OFD
ON
	FFR.ORDERNO = OFD.ORDERNO
	AND FFR.RX_NBR = OFD.RX_NBR
JOIN
	CPR_REPORTING.DBO.LISTLOG AS LL
ON
	FFR.MRN = LL.MRN
	AND FFR.ORDERNO = LL.OTNO
	AND LL.DELFLAG = 0
JOIN
	CPR_REPORTING.DBO.OT
ON
	FFR.MRN = OT.MRN
	AND FFR.ORDERNO = OT.[NO]
	AND OT.DELFLAG = 0
LEFT JOIN
	#DC_DTTM AS DC
ON
	FFR.MRN = DC.MRN
	AND FFR.ORDERNO = DC.ORDERNO
	AND FFR.RX_NBR = DC.RX_NBR
WHERE
	(OT.[STATUS] LIKE '%DC%' OR OT.LISTID LIKE '%DC%' OR OT.LISTID = 'SRX-RXS2CANCEL' OR OT.[STATUS] = 'PENDING')
	AND OFD.ORDERNO IS NULL
------------------------
INSERT INTO #ORDER_FILL_DTTM --SELECT* FROM #ORDER_FILL_DTTM
SELECT
	MRN
	,ORDERNO
	,RX_NBR
	,LAST_LOG_DTTM
	,OLDLISTID
	,NEWLISTID
FROM
	#NEVER_FILLED --SELECT * FROM #NEVER_FILLED
WHERE
	LAST_RECORD_NBR = 1
------------------------
SELECT
	O.*
	,DENSE_RANK () OVER (PARTITION BY MRN, ORDERNO, RX_NBR ORDER BY LOG_DTTM) AS RECORD_NBR
INTO #FILL_RECORD  --SELECT* FROM #FILL_RECORD
FROM
	#ORDER_FILL_DTTM AS O
------------------------	
SELECT DISTINCT
	A.MRN
	,A.ORDERNO
	,A.RX_NBR 
	,A.LOG_DTTM AS FILL_DTTM
	--,CASE WHEN A.LOG_DTTM = (CASE WHEN B.LOG_DTTM IS NULL THEN FFR.LOG_DTTM ELSE DATEADD(MS,2,B.LOG_DTTM) END) THEN DC.DC_DTTM ELSE A.LOG_DTTM END AS FILL_DTTM
	,B.LOG_DTTM AS PREV_FILL_DTTM
	,A.RECORD_NBR AS FILL_NBR
	,CASE WHEN B.LOG_DTTM IS NULL THEN FFR.LOG_DTTM ELSE DATEADD(MS,2,B.LOG_DTTM) END AS START_DT
INTO #FILL_DTTM  --SELECT* FROM #FILL_DTTM
FROM
	#FILL_RECORD AS A
LEFT JOIN
	#FILL_RECORD AS B
ON
	A.MRN = B.MRN
	AND A.ORDERNO = B.ORDERNO
	AND A.RX_NBR = B.RX_NBR
	AND A.RECORD_NBR = B.RECORD_NBR + 1
LEFT JOIN
	#FIRST_FILL_RECORD AS FFR
ON
	A.MRN = FFR.MRN
	AND A.ORDERNO = FFR.ORDERNO
	AND A.RX_NBR = FFR.RX_NBR
	AND FFR.RECORD_NBR = 1
------------------------	
SELECT DISTINCT
	FD.MRN
	,FD.ORDERNO
	,FD.RX_NBR
	,FD.START_DT AS FILL_START
	,FD.FILL_DTTM AS FILL_END
	,FD.FILL_NBR
INTO #FILL_NBR --SELECT* FROM #FILL_NBR
FROM
	#FILL_DTTM AS FD

INSERT INTO #FILL_NBR
SELECT DISTINCT
	FD.MRN
	,FD.ORDERNO
	,FD.RX_NBR 
	,DATEADD(MS,2,MAX(FD.FILL_DTTM)) AS FILL_START
	,GETDATE() AS FILL_ENDR
	,MAX(FD.FILL_NBR) + 1 AS FILL_NBR
FROM #FILL_DTTM AS FD
LEFT JOIN
	#NEVER_FILLED AS NF
ON
	FD.MRN = NF.MRN
	AND FD.ORDERNO = NF.ORDERNO
	AND FD.RX_NBR = NF.RX_NBR
WHERE
	NF.ORDERNO IS NULL
GROUP BY
	FD.MRN
	,FD.ORDERNO
	,FD.RX_NBR 	
----------------------------------
----------------------------------
----------------------------------
--ASSIGN FILL NUMBER TO EACH ORDER STATUS
SELECT DISTINCT
	FS.MRN
	,FS.ORDERNO
	,L.SCRIPTEXT AS RX_NBR
	,CASE WHEN ARS.FIRST_SHIP_DT = 1 THEN 1 ELSE ISNULL(ISNULL(ARS.REFILLNUM,FN.FILL_NBR),1) END AS REFILLNUM
	,FS.[SOURCE]
	,FS.STATUS_DTTM
	,FS.[STATUS]
	,FS.SUB_STATUS_DESC
	,FS.[SUB STATUS CODE]
	,FS.KEEP_YN AS LAST_STATUS
INTO #FINAL_STATUS  --DROP TABLE #FINAL_STATUS --SELECT* FROM #FINAL_STATUS WHERE RX_NBR = '0010614087' ORDER BY STATUS_DTTM
FROM
	#PRE_FINAL_STATUS AS FS --SELECT* FROM #PRE_FINAL_STATUS WHERE ORDERNO = '987925' order by status_dttm
JOIN
	CPR_REPORTING.DBO.LABELS AS L
ON
	FS.MRN = L.LINK
	AND FS.ORDERNO = L.ORDERNO
	AND L.DELFLAG = 0
LEFT JOIN
	#ALL_RX_SHIP_DT AS ARS --SELECT* FROM #ALL_RX_SHIP_DT WHERE RX_NBR = 0010636130
ON
	FS.MRN = ARS.MRN
	AND FS.ORDERNO = ARS.ORDERNO
	AND CAST(FS.STATUS_DTTM AS DATE) = ARS.SHIP_DT
	AND FS.SUB_STATUS_DESC = 'Shipped'
LEFT JOIN
	#FILL_NBR AS FN --SELECT* FROM #FILL_NBR WHERE ORDERNO = 987925
ON
	FS.MRN = FN.MRN
	AND FS.ORDERNO = FN.ORDERNO
	AND FS.STATUS_DTTM BETWEEN FN.FILL_START AND FN.FILL_END
----------------------------------
/*DIAGNOSIS CODES*/
--MASTER ICD CODE TABLE
SELECT
	ICD.CPK_ICDMASTERLIST
	,IT.[TYPE] AS ICD_TYPE
	,ICD.[CODE] AS ICD_CD
	,ICD.[DESCRIPTION] AS ICD_FULL_DESC
	,ICD.SHORTDESCRIPTION AS ICD_SHORT_DESC
INTO #ICD_MASTER_LIST
FROM
	CPR_REPORTING.dbo.ICDMASTERLIST AS ICD (NOLOCK)
JOIN
	CPR_REPORTING.dbo.ICDTYPE AS IT (NOLOCK)  
ON
	ICD.CFK_ICDTYPE = IT.CPK_ICDTYPE
	AND ICD.DELFLAG = 0
	AND IT.DELFLAG = 0
	AND ICD.INACTIVE = 0
	AND ICD.CPK_ICDMASTERLIST <> 0
	AND IT.[TYPE] LIKE '%DIAGNO%'
WHERE
	IT.[TYPE] IN ('ICD-10 Diagnosis Code')
----------------------------------
--PATIENT ICD CODES
SELECT DISTINCT
	ICP.CFK_HR AS MRN
	,ICD10.ICD_CD AS ICD10_CD
	,ICD10.ICD_FULL_DESC AS ICD_DESC
	,DENSE_RANK() OVER (PARTITION BY ICP.CFK_HR ORDER BY ICP.[RANK], ICP.CREATEDON) AS [RANK]
INTO #PATIENT_ICD_CODES_UNCLEAN --DROP TABLE #PATIENT_ICD_CODES_UNCLEAN
FROM
	CPR_REPORTING.dbo.ICDPATIENT AS ICP (NOLOCK)
JOIN
	#ALL_REFERRALS AS MS
ON
	ICP.CFK_HR = MS.MRN
	AND ICP.DELFLAG = 0
LEFT JOIN
	#ICD_MASTER_LIST AS ICD10
ON
	ICP.CFK_ICDMASTERLIST_ICD10 = ICD10.CPK_ICDMASTERLIST
WHERE
	ICD10.ICD_CD IS NOT NULL
----------------------------------
SELECT
	MRN
	,MAX(CASE WHEN [RANK] = 1 THEN ICD10_CD END) AS [PRIMARY ICD10 CODE]
	,MAX(CASE WHEN [RANK] = 2 THEN ICD10_CD END) AS [SECONDARY ICD10 CODE]
	,MAX(CASE WHEN [RANK] = 3 THEN ICD10_CD END) AS [TERTIARY ICD10 CODE]
INTO #PATIENT_ICD_CODES_CLEAN 
FROM
	#PATIENT_ICD_CODES_UNCLEAN AS ICD
GROUP BY
	MRN
----------------------------------
/*CLAIM DETAILS*/
----------------------------------
SELECT DISTINCT
	C.CFK_HR AS MRN 
	,C.CFK_INVOICES AS INVOICE
	,C.CREATEDON AS CLAIM_DTTM
	,C.CLAIMNO
	,C.EXPECTED AS AMOUNT_PAID
	,IC.[NO] AS PAYER_ID
	,IC.PAYOR AS PAYER_NAME
	,IC.ORG AS PLAN_NAME
	,IC.BINNO
	,IC.PCN
	,PTI.GROUP_NUM
	,PTI.POLICY
	,CASE	WHEN IC.ORG LIKE '%MEDICAID%' OR IC.PAYOR LIKE '%MEDICAID%' OR IC.NETID = 'MEDICAID' THEN 'MEDICAID'
			WHEN IC.ORG LIKE '%MEDICARE%' OR IC.PAYOR LIKE '%MEDICARE%' OR IC.ORG LIKE '%PART D%' OR IC.PAYOR LIKE '%PART D%' OR IC.NETID LIKE '%PART D%' THEN 'MEDICARE'
			WHEN IC.PAYOR LIKE '%ASSIST%PROG%' OR IC.PAYOR LIKE '%ASSIST%PROG%' THEN 'OTHER'
			WHEN IC.PAYOR LIKE '%CASH%' OR IC.ORG LIKE '%CASH%' THEN 'CASH'
			ELSE 'COMMERCIAL'
			END AS PAYER_TYPE
	,CASE	WHEN IC.ORG LIKE '%(EP)%' OR LTRIM(RTRIM(IC.BINNO)) <> '' THEN 'PHARMACY' --PHARMACY
			WHEN IC.ORG LIKE '%(H)%' THEN 'MEDICAL' --MEDICAL
			ELSE ''
			END AS BENEFIT_TYPE
	,NP.COPAY
	,B.PT_OOP
INTO #PRE_CLAIM_DETAILS --DROP TABLE #PRE_CLAIM_DETAILS
FROM
	CPR_REPORTING.DBO.CLAIMS AS C (NOLOCK)
LEFT JOIN
	CPR_REPORTING.DBO.INSCOMP AS IC (NOLOCK)
ON
	C.CFK_INSCOMP = IC.[NO]
	AND IC.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.DBO.PATINS AS PTI (NOLOCK)
ON
	C.CFK_PATINS = PTI.CPK_PATINS
	AND PTI.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.DBO.NCPDP AS NP (NOLOCK)
ON
	CFK_INVOICES = NP.BILLNO
	AND CFK_INSCOMP = NP.INSNO
LEFT JOIN
	(SELECT
		C.CFK_HR AS MRN
		,C.CFK_INVOICES AS INVOICE
		,SUM(C.EXPECTED) AS PT_OOP
	FROM
		CPR_REPORTING.DBO.CLAIMS AS C (NOLOCK) --SELECT* FROM CPR_REPORTING.DBO.CLAIMS WHERE CFK_INVOICES = '1144876'
	WHERE
		C.DELFLAG = 0
		AND C.CFK_INSCOMP = '99999'
	GROUP BY
		C.CFK_HR
		,C.CFK_INVOICES) AS B
ON
	C.CFK_HR = B.MRN
	AND C.CFK_INVOICES = B.INVOICE
WHERE
	C.CFK_INVOICES IN (SELECT DISTINCT INVOICE FROM #ALL_REFERRALS)
	AND C.DELFLAG = 0
----------------------------------
--PA REQUIREMENTS
SELECT DISTINCT
	NP.MRN
	,NP.BILLNO AS INVOICE
	,NP.TRANSNO
	,FIELDNAME
	,NP.SHORT_VAL
	,IC.ORG AS PAYOR
	,NP.CREATEDON AS CLAIM_DTTM
	,NC.TEXT_
	,CASE	WHEN (NP.SHORT_VAL LIKE '%PRIOR%AUTH%' OR NP.SHORT_VAL LIKE '%PA%REQ%' OR NP.SHORT_VAL LIKE '%PA %' OR NP.SHORT_VAL LIKE '%AUTH%' OR NP.SHORT_VAL LIKE '%DETERMINATION%')
			AND IC.PAYOR NOT LIKE '%ASSIST%PROG%' THEN 1
			WHEN NC.TEXT_ LIKE '%PRIOR%AUTH%' THEN 1
			ELSE 0 END AS PA_REQ_YN
INTO #PA_REQUIRED
FROM
	CPR_REPORTING.DBO.NCPDPREPS AS NP (NOLOCK)
LEFT JOIN
	CPR_REPORTING.dbo.NCPDPERR AS NC (NOLOCK)
ON
	NP.SHORT_VAL = NC.CODE_
	AND NC.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.DBO.INSCOMP AS IC (NOLOCK)
ON	
	NP.INSNO = IC.[NO]
	AND IC.DELFLAG = 0
WHERE
	NP.DELFLAG = 0
	AND (NP.FIELDNAME = 'FQ' OR NP.FIELDNAME = 'FB')
	AND NP.BILLNO IN (SELECT DISTINCT INVOICE FROM #ALL_REFERRALS WHERE INVOICE IS NOT NULL AND INVOICE <> 0)
----------------------------------
SELECT DISTINCT
	DD.MRN
	,PA.[NO] AS DRUG_ID
	,DD.DRUG
	,PA.INSNO AS INS_ID
	,CAST(PA.ASTART AS DATE) AS PA_START_DATE
	,CAST(PA.ASTOP AS DATE) AS PA_EXP_DATE
	,CASE WHEN DENSE_RANK () OVER (PARTITION BY DD.MRN, DD.DRUG ORDER BY PA.ASTART DESC, ISNULL(PA.ASTOP,GETDATE()) DESC) = 1 THEN 1 ELSE 0 END AS [LAST PA]
INTO #PA_DATES  --DROP TABLE #PA_DATES
FROM
	CPR_REPORTING.DBO.INSVERI AS PA (NOLOCK)
JOIN
	CPR_REPORTING.DBO.PARTS AS P (NOLOCK)
ON
	PA.[NO] = P.[NO]
	AND P.DELFLAG = 0
JOIN
	#ALL_REFERRALS AS DD
ON
	PA.MRN = DD.MRN
	AND P.NDC = DD.NDC
	AND PA.DELFLAG = 0
----------------------------------
--COINSURANCE AMOUNT
SELECT DISTINCT
	NC.MRN
	,NC.BILLNO AS INVOICE
	,NC.TRANSNO
	,NC.FIELDNAME
	,DATA.DESCRIP AS FIELD
	,NC.SHORT_VAL
   ,(CAST(LEFT(SUBSTRING(SHORT_VAL, PATINDEX('%[0-9.-]%', SHORT_VAL), 8000),
           PATINDEX('%[^0-9.-]%', SUBSTRING(SHORT_VAL, PATINDEX('%[0-9.-]%', SHORT_VAL), 8000) + 'X') -1)AS FLOAT))/10
           AS COINSURANCE_AMOUNT        
	,NC.INSNO
	,IC.PAYOR
INTO #COINSURANCE_AMOUNT --DROP TABLE #COINSURANCE_AMOUNT
FROM
	CPR_REPORTING.dbo.NCPDPREPS AS NC (NOLOCK)
JOIN
	CPR_REPORTING.DBO.INSCOMP AS IC (NOLOCK)
ON
	NC.INSNO = IC.[NO]
	AND IC.DELFLAG = 0
	AND NC.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.DBO.NCPDPDATA AS DATA (NOLOCK)
ON
	NC.FIELDNAME = DATA.FIELDNAME
	AND DATA.DELFLAG = 0
WHERE
	NC.FIELDNAME IN ('4U','FI')
	AND NC.BILLNO IN (SELECT DISTINCT INVOICE FROM #ALL_REFERRALS WHERE INVOICE IS NOT NULL AND INVOICE <> 0)
----------------------------------
--DEDUCTIBLE AMOUNT
SELECT DISTINCT
	NC.MRN
	,NC.BILLNO AS INVOICE
	,NC.TRANSNO
	,NC.FIELDNAME
	,DATA.DESCRIP AS FIELD
	,NC.SHORT_VAL
   ,(CAST(LEFT(SUBSTRING(SHORT_VAL, PATINDEX('%[0-9.-]%', SHORT_VAL), 8000),
           PATINDEX('%[^0-9.-]%', SUBSTRING(SHORT_VAL, PATINDEX('%[0-9.-]%', SHORT_VAL), 8000) + 'X') -1)AS FLOAT))/10
           AS [DEDUCTIBLE AMOUNT]        
	,NC.INSNO 
	,IC.PAYOR
INTO #DEDUCTIBLE_AMOUNT --DROP TABLE #DEDUCTIBLE_AMOUNT
FROM
	CPR_REPORTING.dbo.NCPDPREPS AS NC (NOLOCK)
JOIN
	CPR_REPORTING.DBO.INSCOMP AS IC (NOLOCK)
ON
	NC.INSNO = IC.[NO]
	AND IC.DELFLAG = 0
	AND NC.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.DBO.NCPDPDATA AS DATA (NOLOCK)
ON
	NC.FIELDNAME = DATA.FIELDNAME
	AND DATA.DELFLAG = 0
WHERE
	DATA.DESCRIP IN ('Accumulated Deductible Amount','Remaining Deductible Amount')
	AND NC.BILLNO IN (SELECT DISTINCT INVOICE FROM #ALL_REFERRALS WHERE INVOICE IS NOT NULL AND INVOICE <> 0)
----------------------------------
--[ACCUMULATED + REMAINING] = TOTAL DEDUCTIBLE
SELECT
	MRN
	,INVOICE
	,TRANSNO
	,INSNO
	,PAYOR
	,SUM([DEDUCTIBLE AMOUNT]) AS [DEDUCTIBLE AMOUNT] --[ACCUMULATED + REMAINING]
INTO #TOTAL_DEDUCTIBLE
FROM
	#DEDUCTIBLE_AMOUNT AS DA
WHERE
	[DEDUCTIBLE AMOUNT] <> '99999.9'
GROUP BY
	MRN
	,INVOICE
	,TRANSNO
	,INSNO
	,PAYOR
----------------------------------
--FIND PATIENT MAX OUT OF POCKET (OOP) AMOUNT 
SELECT DISTINCT
	NR.MRN
	,NR.BILLNO AS INVOICE
	,NR.INSNO 
	,IC.PAYOR
	,RTRIM(LTRIM(REPLACE(REPLACE(REPLACE(
		CASE	WHEN RTRIM(LTRIM(NR.SHORT_VAL)) LIKE 'MAXIMUM%AMOUNT%DUE%OF%' THEN SUBSTRING(NR.SHORT_VAL,CHARINDEX('DUE OF',NR.SHORT_VAL,1)+6,(LEN(NR.SHORT_VAL)-(CHARINDEX('DUE OF',NR.SHORT_VAL,1)+6)))
				WHEN RTRIM(LTRIM(NR.SHORT_VAL)) LIKE 'OOP MAXIMUM WARNING%' THEN SUBSTRING(NR.SHORT_VAL,CHARINDEX('WARNING',NR.SHORT_VAL,1)+7,(LEN(NR.SHORT_VAL) - CHARINDEX('WARNING',NR.SHORT_VAL,1)+7))
				WHEN RTRIM(LTRIM(NR.SHORT_VAL)) LIKE 'MAXIMUM COST IS%' THEN SUBSTRING(NR.SHORT_VAL,CHARINDEX('COST IS',NR.SHORT_VAL,1)+7,(LEN(NR.SHORT_VAL) - CHARINDEX('COST IS',NR.SHORT_VAL,1)+7))
				END,'$',''),CHAR(10), ''), CHAR(13), '')))
				AS [PATIENT MAXIMUM OUT OF POCKET AMOUNT]
INTO #PATIENT_MAX_OOP 
FROM
	CPR_REPORTING.dbo.NCPDPREPS AS NR (NOLOCK)
JOIN
	#ALL_REFERRALS AS DD
ON
	NR.MRN = DD.MRN
	AND NR.BILLNO = DD.INVOICE
	AND DD.INVOICE IS NOT NULL
	AND DD.INVOICE <> 0
JOIN
	CPR_REPORTING.DBO.INSCOMP AS IC (NOLOCK)
ON
	NR.INSNO = IC.[NO]
	AND IC.DELFLAG = 0
WHERE
	NR.FIELDNAME = 'FQ'
	AND (RTRIM(LTRIM(NR.SHORT_VAL)) LIKE 'MAXIMUM COST IS%' OR RTRIM(LTRIM(NR.SHORT_VAL)) LIKE 'MAXIMUM%AMOUNT%DUE%OF%' OR RTRIM(LTRIM(NR.SHORT_VAL)) LIKE 'OOP MAXIMUM WARNING%')
	AND NR.DELFLAG = 0
----------------------------------
--FINAL CLAIMS DETAIL
SELECT DISTINCT
	PCD.MRN
	,PCD.INVOICE
	,PD.PA_START_DATE
	,PD.PA_EXP_DATE
	,PCD.PT_OOP AS PRIMARY_OOP
	,MAX(CASE WHEN PA.INVOICE IS NOT NULL OR PD.MRN IS NOT NULL THEN '1' ELSE '0' END) AS PA_REQUIRED_YN
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.PAYER_ID END) AS PRIMARY_PAYER_ID
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.PAYER_NAME END) AS PRIMARY_PAYER_NAME
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.PLAN_NAME END) AS PRIMARY_PLAN_NAME
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.BINNO END) AS PRIMARY_BIN_NBR
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.PCN END) AS PRIMARY_PCN_NBR
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.GROUP_NUM END) AS PRIMARY_GROUP_NBR
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.POLICY END) AS PRIMARY_PLAN_ID
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.PAYER_TYPE END) AS PRIMARY_PAYER_TYPE
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.BENEFIT_TYPE END) AS PRIMARY_BENEFIT_TYPE
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.COPAY END) AS PRIMARY_COPAY
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN PCD.AMOUNT_PAID END) AS PRIMARY_PAID
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN COINS.COINSURANCE_AMOUNT END) AS PRIMARY_COINS_AMOUNT
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN [PATIENT MAXIMUM OUT OF POCKET AMOUNT] END) AS PRIMARY_MAX_OOP
	,MAX(CASE WHEN PCD.CLAIMNO = 1 THEN DED.[DEDUCTIBLE AMOUNT] END) AS PRIMARY_DEDUCTIBLE
	
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.PAYER_ID END) AS SECONDARY_PAYER_ID
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.PAYER_NAME END) AS SECONDARY_PAYER_NAME
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.PLAN_NAME END) AS SECONDARY_PLAN_NAME
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.BINNO END) AS SECONDARY_BIN_NBR
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.PCN END) AS SECONDARY_PCN_NBR
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.GROUP_NUM END) AS SECONDARY_GROUP_NBR
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.POLICY END) AS SECONDARY_PLAN_ID
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.PAYER_TYPE END) AS SECONDARY_PAYER_TYPE
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.BENEFIT_TYPE END) AS SECONDARY_BENEFIT_TYPE
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.COPAY END) AS SECONDARY_COPAY
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN PCD.AMOUNT_PAID END) AS SECONDARY_PAID
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN COINS.COINSURANCE_AMOUNT END) AS SECONDARY_COINS_AMOUNT
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN [PATIENT MAXIMUM OUT OF POCKET AMOUNT] END) AS SECONDARY_MAX_OOP
	,MAX(CASE WHEN PCD.CLAIMNO = 2 THEN DED.[DEDUCTIBLE AMOUNT] END) AS SECONDARY_DEDUCTIBLE
INTO #CLAIMS_DETAILS_FINAL  --DROP TABLE #CLAIMS_DETAILS_FINAL
FROM
	#PRE_CLAIM_DETAILS AS PCD
LEFT JOIN
	#PA_REQUIRED AS PA
ON
	PCD.MRN = PA.MRN
	AND PCD.INVOICE = PA.INVOICE
	AND PA.PA_REQ_YN = 1
LEFT JOIN
	#PA_DATES AS PD
ON
	PCD.MRN = PD.MRN
--	AND PCD.PAYER_ID = PD.INS_ID
--	AND PCD.CLAIMNO = 1
	AND PD.INS_ID IS NOT NULL
	AND PD.[LAST PA] = 1
LEFT JOIN
	#COINSURANCE_AMOUNT AS COINS
ON
	PCD.MRN = COINS.MRN
	AND PCD.INVOICE = COINS.INVOICE
	AND PCD.PAYER_ID = COINS.INSNO
LEFT JOIN
	#PATIENT_MAX_OOP AS PMO
ON
	PCD.MRN = PMO.MRN
	AND PCD.INVOICE = PMO.INVOICE
LEFT JOIN
	#TOTAL_DEDUCTIBLE AS DED
ON
	PCD.MRN = DED.MRN
	AND PCD.INVOICE = DED.INVOICE
	AND PCD.PAYER_ID = DED.INSNO
WHERE
	PCD.PAYER_ID IS NOT NULL
GROUP BY
	PCD.MRN
	,PCD.INVOICE
	,PD.PA_START_DATE
	,PD.PA_EXP_DATE
	,PCD.PT_OOP
----------------------------------
--INDETIFY TICKNO SHIPMENTS WITH MULTIPLE TRACKING NUMBERS
SELECT
	SD.MRN
	,SD.ORDERNO
	,SD.RX_NBR
	,SD.LABLOGNO
	,SD.FULL_DRUG_NAME
	,COUNT(DISTINCT TRACKING_NBR) AS TRACKING_NBR_COUNT
INTO #PRE_TRACKING_NBR_FIX --DROP TABLE #PRE_LOT_NUMBER_FIX
FROM
	#ALL_RX_SHIP_DT AS SD -- select * from #ALL_RX_SHIP_DT
GROUP BY
	SD.MRN
	,SD.ORDERNO
	,SD.RX_NBR
	,SD.LABLOGNO
	,SD.FULL_DRUG_NAME
HAVING COUNT(DISTINCT TRACKING_NBR) >  1
----------------------------------
--TRACKING NUMBER FIX
SELECT DISTINCT
	MRN	
	,ORDERNO
	,RX_NBR
	,FULL_DRUG_NAME
	,LABLOGNO
	,REPLACE(REPLACE(REPLACE(MAIN.TRACKING_NBR,'<TRACKING_NBR>',''),'</TRACKING_NBR>',''),'</TRACKING_NBR','') AS TRACKING_NBR
INTO #TRACKING_NBR_FIX  --DROP TABLE #LOT_NUMBER_FIX
FROM
	(SELECT DISTINCT 
		MRN
		,ORDERNO
		,RX_NBR
		,FULL_DRUG_NAME
		,LABLOGNO
		,(
		SELECT TRACKING_NBR + '; ' AS TRACKING_NBR
		FROM #ALL_RX_SHIP_DT AS A
		JOIN #PRE_TRACKING_NBR_FIX AS L
		ON
			A.MRN = L.MRN
			AND A.ORDERNO = L.ORDERNO
			AND A.LABLOGNO = L.LABLOGNO
			AND A.FULL_DRUG_NAME = L.FULL_DRUG_NAME
		WHERE A.MRN = B.MRN
				AND A.LABLOGNO = B.LABLOGNO
				AND A.FULL_DRUG_NAME = B.FULL_DRUG_NAME
				AND A.ORDERNO = B.ORDERNO
		FOR XML PATH ('')
		) AS TRACKING_NBR
	FROM #ALL_RX_SHIP_DT AS B) AS MAIN
WHERE TRACKING_NBR IS NOT NULL
----------------------------------
--RX TRANFER INFO
SELECT DISTINCT
	MRN
	,NOTE_CREATE_DTTM AS TRANSFER_DTTM
	,BODY
	,CASE	WHEN ISNUMERIC(LEFT(LTRIM([TRANSFERRED RX #]),10)) = 1 THEN LTRIM(RTRIM((LEFT(LTRIM([TRANSFERRED RX #]),10))))
			ELSE LTRIM(RTRIM((LEFT(LTRIM([TRANSFERRED RX #]),8)))) 
			END AS [TRANSFERRED RX #]
	,CASE	WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%PHARMACY%' THEN
			LTRIM(RTRIM(SUBSTRING([TRANSFERRED SPECIALTY PHARMACY NAME],1,CHARINDEX('PHARMACY',[TRANSFERRED SPECIALTY PHARMACY NAME],1)+8)))
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%SPECIALTY%' THEN 
			LTRIM(RTRIM(SUBSTRING([TRANSFERRED SPECIALTY PHARMACY NAME],1,CHARINDEX('SPECIALTY',[TRANSFERRED SPECIALTY PHARMACY NAME],1)+9)))
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%MAIL ORDER%' THEN 
			LTRIM(RTRIM(SUBSTRING([TRANSFERRED SPECIALTY PHARMACY NAME],1,CHARINDEX('MAIL ORDER',[TRANSFERRED SPECIALTY PHARMACY NAME],1)+10)))
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%WALGREENS%' THEN 'Walgreens'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%CVS%' THEN 'CVS'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%BRIOVA%' THEN 'Briova'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%ACCREDO%' THEN 'Accredo'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%OPTUM%' THEN 'Optum'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%RITE AID%' THEN 'Rite Aid'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%WALMART%' THEN 'Walmart'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%ASTORIA%' THEN 'Magellan Astoria'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%PUBLIX%' THEN 'Publix'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%ACARIA%' THEN 'Acaria'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%LUMICERA%' THEN 'Lumicera'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%MAGELLAN%' THEN 'Magellan'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%AETNA%' THEN 'Aetna'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%ALLIANCE%' THEN 'Alliance'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%AVELLA%' THEN 'Avella'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%ASPN %' THEN 'ASPN'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%DIPLOMAT%' THEN 'Diplomat'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%BIOSCRIPT%' THEN 'Bioscript'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%CIGNA%' THEN 'Cigna'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%ENVISION%' THEN 'Envision'
			WHEN [TRANSFERRED SPECIALTY PHARMACY NAME] LIKE '%EXPRESS SCRIPT%' THEN 'Express Scripts'

			ELSE LTRIM(RTRIM([TRANSFERRED SPECIALTY PHARMACY NAME]))
			END AS [TRANSFERRED SPECIALTY PHARMACY NAME]
	,CASE	WHEN ISNUMERIC(SUBSTRING([TRANSFERRED SPECIALTY PHARMACY NPI],1,10)) = 1 
			THEN SUBSTRING([TRANSFERRED SPECIALTY PHARMACY NPI],1,10) 
			END AS [TRANSFERRED SPECIALTY PHARMACY NPI]
	,[TRANSFERRED SPECIALTY PHARMACY PHONE]
INTO #RX_TRANSFER --DROP TABLE #RX_TRANSFER	
FROM
	(	
	SELECT DISTINCT
		PN.MRN
		,PN.DATE_ AS NOTE_CREATE_DTTM
		,PN.[SUBJECT]
		,PN.BODY
		,LTRIM(RTRIM(
			CASE	WHEN PN.[SUBJECT] = 'Rx Transferred to other Pharmacy' AND PN.BODY LIKE '%#:%' THEN
						SUBSTRING(PN.BODY,CHARINDEX('#:',PN.BODY,1)+2,LEN(PN.BODY)) 
					WHEN PN.[SUBJECT] = 'Rx Transferred to other Pharmacy' AND PN.BODY LIKE '%#%' THEN 
						SUBSTRING(PN.BODY,CHARINDEX('#',PN.BODY,1)+1,LEN(PN.BODY)) 
					WHEN PN.[SUBJECT] = 'Rx Transferred to other Pharmacy' AND PN.BODY NOT LIKE '%#%' THEN 
						SUBSTRING(PN.BODY,CHARINDEX('RX',PN.BODY,1)+2,LEN(PN.BODY))
					WHEN PN.[SUBJECT] = 'Rx Transferred via ORTF' AND CHARINDEX('NUMBER:',PN.BODY) < CHARINDEX('PHARMACY NAME',PN.BODY) THEN
						SUBSTRING(PN.BODY,CHARINDEX('NUMBER:',PN.BODY)+LEN('NUMBER:'),CHARINDEX('PHARMACY NAME',PN.BODY) - (CHARINDEX('NUMBER:',PN.BODY)+LEN('NUMBER:')))
					WHEN PN.[SUBJECT] = 'Rx Transferred via ORTF' AND PN.BODY LIKE '%NUMBER%' AND PN.BODY LIKE '%PHARMACY NAME%' THEN
						SUBSTRING(PN.BODY,CHARINDEX('NUMBER',PN.BODY)+LEN('NUMBER'),CHARINDEX('PHARMACY NAME',PN.BODY) - (CHARINDEX('NUMBER',PN.BODY)+LEN('NUMBER')))
					END)) AS [TRANSFERRED RX #]
		,LTRIM(RTRIM(CASE	
							WHEN PN.[SUBJECT] = 'Rx Transferred via ORTF' AND PN.BODY LIKE '%PHARMACY NAME:%' AND PN.BODY LIKE '%PHARMACY PHONE%' THEN
						SUBSTRING(PN.BODY,CHARINDEX('PHARMACY NAME:',PN.BODY)+LEN('PHARMACY NAME:'), LEN(PN.BODY))--CHARINDEX('PHARMACY PHONE',PN.BODY) - (CHARINDEX('PHARMACY NAME:',PN.BODY)+LEN('PHARMACY NAME:')))
							WHEN PN.BODY LIKE '%PHARMACY NAME%' THEN--AND PN.BODY LIKE '%NPI%' AND PN.BODY LIKE '%DEA%' THEN 
						SUBSTRING(PN.BODY,CHARINDEX('PHARMACY NAME'	,PN.BODY,1)+14,LEN(PN.BODY))
							WHEN PN.BODY LIKE '%TRANSFER TO%' THEN
						SUBSTRING(PN.BODY,CHARINDEX('TRANSFER TO',PN.BODY,1)+11,LEN(PN.BODY)) 
							WHEN PN.BODY NOT LIKE '%PHARMACY NAME%' THEN
						SUBSTRING(PN.BODY,CHARINDEX('TRANSFERRED TO',PN.BODY,1)+14,LEN(PN.BODY))  
							END)) AS [TRANSFERRED SPECIALTY PHARMACY NAME]
		,LTRIM(RTRIM(CASE	WHEN PN.BODY LIKE '%NPI NUMBER%' THEN
						SUBSTRING(PN.BODY,CHARINDEX('NPI NUMBER',PN.BODY,1)+11,LEN(PN.BODY))  
							WHEN PN.BODY LIKE '%NPI%' THEN
						SUBSTRING(PN.BODY,CHARINDEX('NPI',PN.BODY,1)+4,LEN(PN.BODY)) 
							END)) AS [TRANSFERRED SPECIALTY PHARMACY NPI]
		,LTRIM(RTRIM(CASE	
						WHEN PATINDEX('%[0-9][0-9][0-9]-[0-9][0-9][0-9]-[0-9][0-9][0-9]%',PN.BODY) > 0 THEN 
							SUBSTRING(PN.BODY,PATINDEX('%[0-9][0-9][0-9]-[0-9][0-9][0-9]-[0-9][0-9][0-9]%',PN.BODY),12)
						WHEN PATINDEX('%[0-9][0-9][0-9])%[0-9][0-9][0-9]-[0-9][0-9][0-9]%',PN.BODY) > 0 THEN 
							SUBSTRING(PN.BODY,PATINDEX('%([0-9][0-9][0-9])%[0-9][0-9][0-9]-[0-9][0-9][0-9]%',PN.BODY),12)			
						WHEN PATINDEX('%[0-9][0-9][0-9] [0-9][0-9][0-9] [0-9][0-9][0-9][0-9]%',PN.BODY) > 0 THEN
							SUBSTRING(PN.BODY,PATINDEX('%[0-9][0-9][0-9] [0-9][0-9][0-9] [0-9][0-9][0-9][0-9]%',PN.BODY),12)					
							END)) AS [TRANSFERRED SPECIALTY PHARMACY PHONE]
	FROM
		CPR_REPORTING.dbo.PRONOTES AS PN (NOLOCK)
	WHERE
		PN.[SUBJECT] IN ('Rx Transferred to other Pharmacy','Rx Transferred via ORTF')
		AND CAST(PN.DATE_ AS DATE) > '2017-01-01'
		AND PN.DELFLAG = 0
		AND PN.VOIDED = 0
		AND PN.MRN IN (SELECT DISTINCT MRN FROM #FINAL_STATUS WHERE SUB_STATUS_DESC = 'Triaged to other SP')
) AS T
----------------------------------
--PRIOR MS THERAPY
SELECT DISTINCT
	MRN
	,DRUG_NAME
	,FIRST_SHIP_DATE
	,LAST_SHIP_DATE
	,DENSE_RANK () OVER (PARTITION BY MRN, DRUG_NAME ORDER BY LAST_SHIP_DATE DESC) AS LOG_NBR
INTO #PRIOR_MS_THERAPY
FROM
	(SELECT DISTINCT
		TCI.MRN
		,LTRIM(RTRIM(REPLACE(SUBSTRING(P.NAME_,1,CHARINDEX(' ',P.NAME_)),'ZZ',''))) AS DRUG_NAME
		,MAX(CAST(TCI.CONFDATE AS DATE)) AS LAST_SHIP_DATE
		,MIN(CAST(TCI.CONFDATE AS DATE)) AS FIRST_SHIP_DATE
	FROM
		CPR_REPORTING.DBO.TICKCI AS TCI
	JOIN
		CPR_REPORTING.DBO.TICKC AS TC
	ON
		TCI.TICKNO = TC.TICKNO
		AND TCI.DELFLAG = 0
		AND TC.DELFLAG = 0
	JOIN
		CPR_REPORTING.DBO.PARTS AS P
	ON
		TC.[NO] = P.[NO]
		AND P.DELFLAG = 0
	JOIN
		CPR_REPORTING.DBO.LABLOG AS LAB
	ON
		TC.LABLOGNO = LAB.CPK_LABLOG
		AND TC.MRN = LAB.LINK
		AND LAB.DELFLAG = 0
		AND LAB.LINE9 NOT LIKE '%VOID%'
	JOIN
		#FINAL_STATUS AS FS
	ON
		TCI.MRN = FS.MRN
		AND CAST(TCI.CONFDATE AS DATE) < CAST(FS.STATUS_DTTM AS DATE)
	LEFT JOIN
		#CLIENT_DRUGS AS CD
	ON	
		P.NAME_ LIKE '%'+CD.DRUG+'%'
	WHERE
		TCI.CONFIRMED = 'C'
		AND CD.DRUG IS NULL
		AND P.REVCODE = 'M' -- OTHER MS THERAPY DRUGS
		AND P.ISITRX = 'Y'
	GROUP BY
		TCI.MRN
		,LTRIM(RTRIM(REPLACE(SUBSTRING(P.NAME_,1,CHARINDEX(' ',P.NAME_)),'ZZ',''))) 
	) AS PT
----------------------------------
--BI START DATE (Base for Active, Discontinued or Cancelled patients when PA is required)
SELECT DISTINCT
	LL.MRN
	,LL.OTNO AS ORDERNO
	,FS.[STATUS]
	,FS.STATUS_DTTM
	,FS.REFILLNUM
	,MAX(LL.LOGDATE) AS LOG_DTTM
INTO #BI_START_DATE
FROM
	CPR_REPORTING.DBO.LISTLOG AS LL
JOIN
	#FINAL_STATUS AS FS
ON
	LL.MRN = FS.MRN
	AND LL.OTNO = FS.ORDERNO
	AND CAST(LL.LOGDATE AS DATE) < = CAST(FS.STATUS_DTTM AS DATE)
	AND LL.DELFLAG = 0
WHERE
	LL.MRN IN (SELECT DISTINCT MRN FROM #FINAL_STATUS)
	AND LL.NEWLISTID IN ('SRX-CLAIMSREFILLS','SRX-CLAIMSNEW','SRX-BENEFITNEW','SRX-BENEFITREFILLS')
	AND FS.[STATUS] IN ('ACTIVE','DISCONTINUED','CANCELLED')
GROUP BY
	LL.MRN
	,LL.OTNO
	,FS.[STATUS]
	,FS.STATUS_DTTM
	,FS.REFILLNUM
----------------------------------
----------------------------------
----------------------------------
--REPORT UNCLEAN
SELECT DISTINCT
	FS.MRN
	,FS.ORDERNO
	,ISNULL(FS.RX_NBR,'') AS RX_NBR
	,FS.REFILLNUM
	,LTRIM(RTRIM(OT.COMMENTS)) AS [Hub Order Transaction Number]
	,FS.STATUS_DTTM
	,FS.[STATUS]
	,FS.[SUB STATUS CODE]
	,REPLACE(CAST(AR.REFERRAL_RCVD_DTTM AS DATE),'-','') AS [Date of Referral Started]
	,AR.[Referral Source]
	,AR.DRUG AS [Brand Name]
	,AR.NDC AS [Referred NDC Code]
	,AR.AUTHORIZED_REFILLS AS [Authorized refills]
	,ICD.[PRIMARY ICD10 CODE] AS [Primary Diagnosis Code]
	,ISNULL(ICD.[SECONDARY ICD10 CODE],'') AS [Secondary Diagnosis Code]
	,LTRIM(RTRIM(D.PH_NPI)) AS [NPI #]
	,LTRIM(RTRIM(D.PH_DEA)) AS [DEA #]
	,LTRIM(RTRIM(D.PH_FIRST)) AS [First Name]
	,'' AS [Middle Name]
	,LTRIM(RTRIM(D.PH_LAST)) AS [Last Name]
	,'' AS [Suffix]
	,LTRIM(RTRIM(D.PH_ADDRESS)) AS [Physician Address1]
	,LTRIM(RTRIM(D.PH_ADDR2)) AS [Physician Address2]
	,LTRIM(RTRIM(D.PH_CITY)) AS [Physician City]
	,LTRIM(RTRIM(D.PH_STATE)) AS [Physician State]
	,LEFT(LTRIM(RTRIM(D.PH_ZIP)),5) AS [Physician Zip]
	,LTRIM(RTRIM(REPLACE(D.PH_PHONE,'-',''))) AS [Physician Phone]
	,LTRIM(RTRIM(REPLACE(D.PH_FAX,'-',''))) AS [Physician Fax]
	,ISNULL(ISNULL(CDF.PRIMARY_BIN_NBR,ICP.BINNO),'') AS [Primary Payer BIN]
	,ISNULL(ISNULL(CDF.PRIMARY_PCN_NBR,ICP.PCN),'') AS [Primary Payer PCN]
	,ISNULL(ISNULL(CDF.PRIMARY_GROUP_NBR,LTRIM(RTRIM(PTIP.GROUP_NUM))),'') AS [Primary Group #]
	,ISNULL(ISNULL(CDF.PRIMARY_PAYER_NAME,LTRIM(RTRIM(PTIP.PAYOR))),'') AS [Primary Payer Name]
	,ISNULL(ISNULL(CDF.PRIMARY_PAYER_TYPE,CASE	WHEN ICP.ORG LIKE '%MEDICAID%' OR ICP.PAYOR LIKE '%MEDICAID%' OR ICP.NETID = 'MEDICAID' THEN 'MEDICAID'
												WHEN ICP.ORG LIKE '%MEDICARE%' OR ICP.PAYOR LIKE '%MEDICARE%' OR ICP.ORG LIKE '%PART D%' OR ICP.PAYOR LIKE '%PART D%' OR ICP.NETID LIKE '%PART D%' THEN 'MEDICARE'
												WHEN ICP.PAYOR LIKE '%ASSIST%PROG%' OR ICP.PAYOR LIKE '%ASSIST%PROG%' THEN 'OTHER'
												WHEN ICP.PAYOR LIKE '%CASH%' OR ICP.ORG LIKE '%CASH%' THEN 'CASH'
												ELSE 'COMMERCIAL'END),'') AS [Primary Payer Type]
	,ISNULL(ISNULL(CDF.PRIMARY_BENEFIT_TYPE,CASE WHEN ICP.ORG LIKE '%(EP)%' OR LTRIM(RTRIM(ICP.BINNO)) <> '' THEN 'PHARMACY' --PHARMACY
												WHEN ICP.ORG LIKE '%(H)%' THEN 'MEDICAL' ELSE '' END),'') AS [Primary Benefit Type] 
	,ISNULL(ISNULL(CDF.PRIMARY_PLAN_NAME,LTRIM(RTRIM(PTIP.INSURANCE))),'') AS [Primary Plan Name]
	,ISNULL(ICP.NETID,'') AS [Primary Plan Type]
	,ISNULL(CAST(CDF.PRIMARY_OOP AS VARCHAR(100)),'') AS [Primary Patient Out-of-Pocket amount]
	,ISNULL(CAST(CDF.PRIMARY_COPAY AS VARCHAR(100)),'') AS [Primary Co-Pay amount]
	,CASE WHEN CAST(CDF.PRIMARY_COPAY AS VARCHAR(100)) IS NOT NULL THEN '$' ELSE '' END AS [Primary Co-Pay Type]
	,ISNULL(CAST(CDF.PRIMARY_DEDUCTIBLE AS VARCHAR(100)),'') AS [Primary Deductible]
	,ISNULL(CAST(CDF.PRIMARY_MAX_OOP AS VARCHAR(100)),'') AS [Primary Max out of pocket]
	,'' AS [Primary Lifetime Max]
	,CASE WHEN CDF.PA_REQUIRED_YN = '1' THEN 'Y' WHEN CDF.PA_REQUIRED_YN = '0' THEN 'N' ELSE '' END AS [Primary PA Required]
	,ISNULL(CONVERT(VARCHAR(30),CDF.PA_EXP_DATE,112),'') AS [Primary PA Expiration Date]
	,ISNULL(CDF.SECONDARY_BIN_NBR,'') AS [Secondary Payer BIN]
	,ISNULL(CDF.SECONDARY_PCN_NBR,'') AS [Secondary Payer PCN]
	,ISNULL(CDF.SECONDARY_GROUP_NBR,'') AS [Secondary Group #]
	,ISNULL(CDF.SECONDARY_PAYER_NAME,'') AS [Secondary Payer Name]
	,ISNULL(CDF.SECONDARY_PAYER_TYPE,'') AS [Secondary Payer Type]
	,ISNULL(CDF.SECONDARY_BENEFIT_TYPE,'') AS [Secondary Benefit Type]
	,ISNULL(CDF.SECONDARY_PLAN_NAME,'') AS [Secondary Plan Name]
	,'' AS [Secondary Plan Type]
	,ISNULL(CAST(CDF.SECONDARY_COPAY AS VARCHAR(100)),'') AS [Secondary Co-Pay amount]
	,CASE WHEN CAST(CDF.SECONDARY_COPAY AS VARCHAR(100)) IS NOT NULL THEN '$' ELSE '' END AS [Secondary Co-Pay Type]
	,ISNULL(CAST(CDF.SECONDARY_DEDUCTIBLE AS VARCHAR(100)),'') AS [Secondary Deductible]
	,ISNULL(CAST(CDF.SECONDARY_MAX_OOP AS VARCHAR(100)),'') AS [Secondary Max out of pocket]
	,'' AS [Secondary Lifetime Max]
	,'' AS [Secondary PA Required]
	,'' AS [Secondary PA Expiration Date]
	,LTRIM(RTRIM(HR.USERDEF2)) AS [HUB Identifier]
	,CASE WHEN LTRIM(RTRIM(HR.USERDEF3)) IN ('Y','YES') THEN 'Y' ELSE 'N' END AS [HIPAA Consent]
	,CASE WHEN HR.USERDEF4 IS NOT NULL THEN REPLACE(CAST(DATEADD(DAY,365,HR.USERDEF4) AS DATE),'-','') ELSE '' END AS [HIPAA Expiration Date]
	,LTRIM(RTRIM(HR.[STATE])) AS [Patient State]
	,CASE WHEN DATEDIFF(YEAR,HR.DOB,GETDATE()) >= 89 THEN '1900' ELSE YEAR(HR.DOB) END AS [Patient YOB]
	,CASE WHEN LTRIM(RTRIM(HR.SEX)) = '' THEN 'U' ELSE LTRIM(RTRIM(HR.SEX)) END AS [Patient Gender]
	,FS.[STATUS] AS [Current Referral Status]
	--,REPLACE(CAST(FS.STATUS_DTTM AS DATE),'-','') AS [Status Date]
	,REPLACE(CAST(FS.STATUS_DTTM AS DATE),'-','') AS [Status Date]
	,FS.[SUB STATUS CODE] AS [Status Reason Code]
	,MPD.[Pharmacy Name]
	,MPD.[Pharmacy Location Name]
	,MPD.[Location DEA]
	,MPD.[Location NPI Number]
	,MPD.[Location NCPDP Number]
	,ISNULL(PT1.DRUG_NAME,'') AS [Prior MS Therapy #1]
	,ISNULL(PT2.DRUG_NAME,'') AS [Prior MS Therapy #2]
	,ISNULL(DATEDIFF(DAY,PT1.FIRST_SHIP_DATE,ISNULL(PT2.LAST_SHIP_DATE,PT1.LAST_SHIP_DATE)),'') AS [Duration of Prior MS Therapy]
	,ISNULL(DC.DC_REASON,'') AS [Reason for Discontinuation of Prior Therapy]
	,ISNULL(CONVERT(VARCHAR(30),BST.LOG_DTTM,112),'') AS [BI Start Date]
	,ISNULL(CONVERT(VARCHAR(30),CDF.PA_START_DATE,112),'') AS [PA Start Date]
	,ISNULL(REPLACE(CONVERT(VARCHAR(30),PAR.PA_RCVD_DTTM,112),'-',''),'') AS [PA Approved Date]
	,REPLACE(ISNULL(CONVERT(VARCHAR(30),AD.PA_DENIED_DTTM,112),''),'-','') AS [PA Denied Date]
	,REPLACE(ISNULL(CONVERT(VARCHAR(30),ASD.APPEAL_START_DATE,112),''),'-','') AS [First Appeal Start Date]
	,ISNULL(RXT.[TRANSFERRED SPECIALTY PHARMACY NAME],'') AS [Transferred to another SP]
	,'' AS [Transferred from another SP]
	,'' AS [Warm transfer to Hub]
	,'' AS [Warm transfer date]
INTO #REPORT_UNCLEAN
FROM
	#FINAL_STATUS AS FS
JOIN
	#ALL_REFERRALS AS AR
ON
	FS.MRN = AR.MRN
	AND FS.ORDERNO = AR.ORDERNO
	AND FS.RX_NBR = AR.RX_NBR
JOIN
	CPR_REPORTING.DBO.HR
ON
	FS.MRN = HR.MRN
	AND HR.DELFLAG = 0
LEFT JOIN
	#PATIENT_ICD_CODES_CLEAN AS ICD  
ON
	FS.MRN = ICD.MRN
LEFT JOIN
	CPR_REPORTING.DBO.DOCTORS AS D
ON
	AR.PHYSICIAN_ID = D.[NO]
	AND D.DELFLAG = 0
LEFT JOIN
	#ALL_REFERRALS AS ARR
ON
	FS.MRN = ARR.MRN
	AND FS.ORDERNO = ARR.ORDERNO
	AND FS.RX_NBR = ARR.RX_NBR
	AND FS.REFILLNUM = ARR.REFILLNUM
LEFT JOIN
	#CLAIMS_DETAILS_FINAL AS CDF --SELECT * FROM #CLAIMS_DETAILS_FINAL
ON
	ARR.MRN = CDF.MRN
	AND ARR.INVOICE = CDF.INVOICE
LEFT JOIN
	CPR_REPORTING.DBO.OT
ON
	FS.ORDERNO = OT.[NO]
	AND OT.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.DBO.PATINS AS PTIP --PRIMARY PAYER 
ON
	OT.PI_NO = PTIP.CPK_PATINS
	AND PTIP.DELFLAG = 0
LEFT JOIN
	CPR_REPORTING.DBO.INSCOMP AS ICP
ON
	PTIP.INSNO = ICP.[NO]
	AND ICP.DELFLAG = 0
LEFT JOIN
	[Adhoc_Employee_Metrics].[dbo].[MRx_Pharmacy_Demos] AS MPD
ON
	OT.SITENO = MPD.SITENO
LEFT JOIN
	#PRIOR_MS_THERAPY AS PT1
ON
	FS.MRN = PT1.MRN
	AND PT1.LOG_NBR = 1
LEFT JOIN
	#PRIOR_MS_THERAPY AS PT2
ON
	FS.MRN = PT2.MRN
	AND PT2.LOG_NBR = 2
LEFT JOIN
	(SELECT 
		LAB.LINK AS MRN
		,PT.DRUG_NAME
		,LAB.CREATEDON AS DC_DTTM
		,LAB.LINE9
		,LTRIM(RTRIM(CASE	WHEN LAB.LINE9 LIKE '%PT. DC%' THEN SUBSTRING(LAB.LINE9,CHARINDEX('PT. DC''D',LAB.LINE9)+LEN('PT. DC''D'),LEN(LAB.LINE9))
							ELSE SUBSTRING(LAB.LINE9,34,LEN(LAB.LINE9)) END)) AS DC_REASON
		,DENSE_RANK () OVER (PARTITION BY LAB.LINK, PT.DRUG_NAME ORDER BY LAB.CREATEDON DESC) AS LOG_NBR
	FROM 
		CPR_REPORTING.DBO.LABLOG AS LAB
	JOIN
		#PRIOR_MS_THERAPY AS PT
	ON
		LAB.LINK = PT.MRN
	JOIN
		CPR_REPORTING.DBO.LABELS AS L
	ON
		LAB.SCRIPTEXT = L.SCRIPTEXT
		AND L.DELFLAG = 0
		AND LAB.DELFLAG = 0
	JOIN
		CPR_REPORTING.DBO.PARTS AS P
	ON
		L.[NO] = P.[NO]
		AND P.DELFLAG = 0
		AND P.NAME_ LIKE '%'+PT.DRUG_NAME+'%'
	WHERE
		LAB.LINE9 LIKE '%DISCONTINU%') AS DC
ON
	PT1.MRN = DC.MRN
	AND PT1.DRUG_NAME = DC.DRUG_NAME
	AND DC.LOG_NBR = 1
LEFT JOIN
	#BI_START_DATE AS BST
ON
	FS.MRN = BST.MRN
	AND FS.ORDERNO = BST.ORDERNO
	AND FS.[STATUS] = BST.[STATUS]
	AND FS.STATUS_DTTM = BST.STATUS_DTTM
	AND FS.REFILLNUM = BST.REFILLNUM
LEFT JOIN
	(SELECT DISTINCT	
		MRN
		,MAX(PN.DATE_) AS PA_RCVD_DTTM
	FROM
		CPR_REPORTING.DBO.PRONOTES AS PN
	WHERE
		PN.MRN IN (SELECT DISTINCT MRN FROM #CLAIMS_DETAILS_FINAL WHERE PA_REQUIRED_YN = 1)
		AND PN.DELFLAG = 0
		AND PN.VOIDED = 0
		AND PN.[SUBJECT] LIKE '%Authorization Received%'
	GROUP BY MRN) AS PAR
ON
	CDF.MRN =  PAR.MRN
	AND CDF.PA_REQUIRED_YN = 1
LEFT JOIN
	(SELECT DISTINCT	
		MRN
		,MAX(PN.DATE_) AS PA_DENIED_DTTM
	FROM
		CPR_REPORTING.DBO.PRONOTES AS PN
	WHERE
		PN.MRN IN (SELECT DISTINCT MRN FROM #CLAIMS_DETAILS_FINAL WHERE PA_REQUIRED_YN = 1)
		AND PN.DELFLAG = 0
		AND PN.VOIDED = 0
		AND PN.[SUBJECT] LIKE '%Authorization Denied%'
	GROUP BY MRN) AS AD
on
	CDF.MRN = AD.MRN
	AND CDF.PA_REQUIRED_YN = 1
LEFT JOIN
	(SELECT 
		LE.ORDERNO
		,LE.MRN
		,MAX(LE.CHANGE_DT) AS APPEAL_START_DATE
	FROM
		 [Adhoc_Employee_Metrics].[dbo].[TxnHist_LastEvents] AS LE
	JOIN
		CPR_REPORTING.DBO.POPUPDATA AS P
	ON
		LE.FLD_IS = P.CPK_POPUPDATA
		AND P.DELFLAG = 0
	JOIN
		#FINAL_STATUS AS FS
	ON
		LE.MRN = FS.MRN
		AND LE.ORDERNO = FS.ORDERNO
	WHERE
		P.TEXT_ LIKE '%APPEAL%'
	GROUP BY
		LE.ORDERNO, LE.MRN) AS ASD
ON
	FS.MRN = ASD.MRN
	AND FS.ORDERNO = ASD.ORDERNO
	AND CDF.PA_REQUIRED_YN = 1
LEFT JOIN
	#RX_TRANSFER AS RXT
ON
	FS.MRN = RXT.MRN
	AND FS.RX_NBR = RXT.[TRANSFERRED RX #]
	AND FS.SUB_STATUS_DESC = 'Triaged to other SP'
----------------------------------
-- REPORT CLEAN
SELECT DISTINCT
	CASE WHEN REL.TRANSACTION_ID IS NOT NULL THEN 1 ELSE 0 END AS [RESTATEMENT YN]
	,MM.SPEC_PAT_ID_MASKED AS [Referral Number]
	,R.[Hub Order Transaction Number]
	,R.[Date of Referral Started]
	,R.[Referral Source]
	,R.[Brand Name]
	,R.[Referred NDC Code]
	,MR.RX_NUM_MASKED AS [RX Number]
	,R.ORDERNO
	,R.[Authorized refills]
	,R.[Primary Diagnosis Code]
	,R.[Secondary Diagnosis Code]
	,R.[NPI #]
	,R.[DEA #]
	,R.[First Name]
	,R.[Middle Name]
	,R.[Last Name]
	,R.[Suffix]
	,R.[Physician Address1]
	,R.[Physician Address2]
	,R.[Physician City]
	,R.[Physician State]
	,R.[Physician Zip]
	,R.[Physician Phone]
	,R.[Physician Fax]
	,R.[Primary Payer BIN]
	,R.[Primary Payer PCN]
	,R.[Primary Group #]
	,R.[Primary Payer Name]
	,R.[Primary Payer Type]
	,R.[Primary Benefit Type]
	,'' AS [Primary PBM Name] -- PER CONTRACT: NOT PROVIDED
	,R.[Primary Plan Name]
	,R.[Primary Plan Type]
	,R.[Primary Patient Out-of-Pocket amount]
	,R.[Primary Co-Pay amount]
	,R.[Primary Co-Pay Type]
	,R.[Primary Deductible]
	,R.[Primary Max out of pocket]
	,R.[Primary Lifetime Max]
	,R.[Primary PA Required]
	,R.[Primary PA Expiration Date]
	,R.[Secondary Payer BIN]
	,R.[Secondary Payer PCN]
	,R.[Secondary Group #]
	,R.[Secondary Payer Name]
	,R.[Secondary Payer Type]
	,R.[Secondary Benefit Type]
	,R.[Secondary Plan Name]
	,R.[Secondary Plan Type]
	,R.[Secondary Co-Pay amount]
	,R.[Secondary Co-Pay Type]
	,R.[Secondary Deductible]
	,R.[Secondary Max out of pocket]
	,R.[Secondary Lifetime Max]
	,R.[Secondary PA Required]
	,R.[Secondary PA Expiration Date]
	,MM.SPEC_PAT_ID_MASKED AS [SPP Patient ID]
	,R.[HUB Identifier]
	,R.[HIPAA Consent]
	,R.[HIPAA Expiration Date]
	,R.[Patient State]
	,R.[Patient YOB]
	,R.[Patient Gender]
	,R.[Current Referral Status]
	,R.[Status Date]
	,R.[Status Reason Code]
	,R.[Pharmacy Name]
	,R.[Pharmacy Location Name]
	,R.[Location DEA]
	,R.[Location NPI Number]
	,R.[Location NCPDP Number]
	,REL.TRANSACTION_ID AS [Record ID]
	,R.[Prior MS Therapy #1]
	,R.[Prior MS Therapy #2]
	,R.[Duration of Prior MS Therapy]
	,R.[Reason for Discontinuation of Prior Therapy]
	,'' AS [Patient Diagnosis Date] -- PER CONTRACT: NOT PROVIDED
	,R.[BI Start Date]
	,R.[PA Start Date]
	,R.[PA Approved Date]
	,R.[PA Denied Date]
	,R.[First Appeal Start Date]
	,R.[Transferred to another SP]
	,R.[Transferred from another SP]
	,R.[Warm transfer to Hub]
	,R.[Warm transfer date]
	,R.STATUS_DTTM  -- Was missing from insert for the transaction logging 
INTO #REPORT_CLEAN
FROM
	#REPORT_UNCLEAN AS R
LEFT JOIN
	CPR_ASD.DBO.RAND_CROSSWALK_MRN AS MM
ON
	R.MRN = MM.MRN
LEFT JOIN
	CPR_ASD.DBO.RAND_CROSSWALK_SCRIPTEXT AS MR
ON
	R.RX_NBR = MR.SCRIPTEXT
LEFT JOIN
	[Adhoc_Employee_Metrics].[dbo].[Pharma - Report Export Log] AS REL
ON
	ISNULL(MR.RX_NUM_MASKED,R.ORDERNO) = REL.[RECORD ID]
	AND R.[Current Referral Status] = REL.[PATIENT STATUS]
	AND R.[Status Reason Code] = REL.[PATIENT SUB STATUS]
	AND CAST(R.STATUS_DTTM AS DATE) = CAST(REL.STATUS_DTTM AS DATE)
	AND REL.REPORT_NAME = @REPORT_TYPE
	AND REL.CLIENT_NAME = @CLIENT
----------------------------------
--INSERT RECORD INTO TRANSACTION LOG TABLE
IF @LOG_TRANSACTION = 'Y'
BEGIN
	INSERT INTO [Adhoc_Employee_Metrics].[dbo].[Pharma - Report Export Log]
	SELECT DISTINCT
		@CLIENT AS CLIENT_NAME
		,@REPORT_TYPE AS REPORT_NAME
		,RC.[Rx Number] AS RECORD_ID
		,CAST(RC.STATUS_DTTM AS DATE) AS STATUS_DTTM
		,RC.[Current Referral Status] AS [PATIENT STATUS]
		,RC.[Status Reason Code] AS [PATIENT SUB STATUS]
		,GETDATE() AS LOG_DTTM
	FROM	
		#REPORT_CLEAN AS RC
	WHERE
		[RESTATEMENT YN] = 0
END
----------------------------------
IF @LOG_TRANSACTION = 'Y'
BEGIN
	INSERT INTO [Adhoc_Employee_Metrics].[dbo].[Pharma - Report Export Log - Backup]
	SELECT DISTINCT
		@CLIENT AS CLIENT_NAME
		,@REPORT_TYPE AS REPORT_NAME
		,REL.TRANSACTION_ID
		,RC.[Rx Number] AS RECORD_ID
		,REL.STATUS_DTTM AS STATUS_DTTM
		,RC.[Current Referral Status] AS [PATIENT STATUS]
		,RC.[Status Reason Code] AS [PATIENT SUB STATUS]
		,GETDATE() AS LOG_DTTM	
	FROM
		#REPORT_CLEAN AS RC
	JOIN
		[Adhoc_Employee_Metrics].[dbo].[Pharma - Report Export Log] AS REL
	ON
		RC.[Rx Number] = REL.[RECORD ID]
		AND RC.[Status Reason Code] = REL.[PATIENT SUB STATUS]
		AND RC.[Current Referral Status] = REL.[PATIENT STATUS]
		AND CAST(RC.STATUS_DTTM AS DATE) = CAST(REL.STATUS_DTTM AS DATE)
		AND RC.[RESTATEMENT YN] = 0
		AND CAST(REL.LOG_DTTM AS DATE) = @TODAY
		AND REL.CLIENT_NAME = @CLIENT
		AND REL.REPORT_NAME = @REPORT_TYPE
END	
----------------------------------
----------------------------------
-- FINAL REPORT
SELECT
	R.[SPP Patient ID] AS [Referral Number]
	,R.[Hub Order Transaction Number]
	,R.[Date of Referral Started]
	,R.[Referral Source]
	,R.[Brand Name]
	,R.[Referred NDC Code]
	,R.[RX Number]
	,R.[Authorized refills]
	,R.[Primary Diagnosis Code]
	,R.[Secondary Diagnosis Code]
	,'' AS [Filler1]
	,R.[NPI #]
	,R.[DEA #]
	,R.[First Name]
	,R.[Middle Name]
	,R.[Last Name]
	,R.[Suffix]
	,R.[Physician Address1]
	,R.[Physician Address2]
	,R.[Physician City]
	,R.[Physician State]
	,R.[Physician Zip]
	,R.[Physician Phone]
	,R.[Physician Fax]
	,R.[Primary Payer BIN]
	,R.[Primary Payer PCN]
	,R.[Primary Group #]
	,'' AS [Filler2]
	,R.[Primary Payer Name]
	,R.[Primary Payer Type]
	,R.[Primary Benefit Type]
	,R.[Primary PBM Name]
	,R.[Primary Plan Name]
	,R.[Primary Plan Type]
	,R.[Primary Patient Out-of-Pocket amount]
	,R.[Primary Co-Pay amount]
	,R.[Primary Co-Pay Type]
	,R.[Primary Deductible]
	,R.[Primary Max out of pocket]
	,R.[Primary Lifetime Max]
	,R.[Primary PA Required]
	,R.[Primary PA Expiration Date]
	,R.[Secondary Payer BIN]
	,R.[Secondary Payer PCN]
	,R.[Secondary Group #]
	,'' AS [Filler3]
	,R.[Secondary Payer Name]
	,R.[Secondary Payer Type]
	,R.[Secondary Benefit Type]
	,'' AS [Filler4]
	,R.[Secondary Plan Name]
	,R.[Secondary Plan Type]
	,R.[Secondary Co-Pay amount]
	,R.[Secondary Co-Pay Type]
	,R.[Secondary Deductible]
	,R.[Secondary Max out of pocket]
	,R.[Secondary Lifetime Max]
	,R.[Secondary PA Required]
	,R.[Secondary PA Expiration Date]
	,R.[SPP Patient ID]
	,R.[HUB Identifier]
	,R.[HIPAA Consent]
	,R.[HIPAA Expiration Date]
	,R.[Patient State]	
	,R.[Patient YOB]
	,R.[Patient Gender]
	,R.[Current Referral Status]
	,R.[Status Date]
	,R.[Status Reason Code]
	,R.[Pharmacy Name]
	,R.[Pharmacy Location Name]
	,R.[Location DEA]
	,R.[Location NPI Number]
	,R.[Location NCPDP Number]
	,REL.TRANSACTION_ID AS [Record ID]
	,R.[Prior MS Therapy #1]
	,R.[Prior MS Therapy #2]
	,R.[Duration of Prior MS Therapy]
	,R.[Reason for Discontinuation of Prior Therapy]
	,R.[Patient Diagnosis Date]
	,R.[BI Start Date]
	,R.[PA Start Date]
	,R.[PA Approved Date]
	,R.[PA Denied Date]
	,R.[First Appeal Start Date]
	,R.[Transferred to another SP]
	,R.[Transferred from another SP]
	,R.[Warm transfer to Hub]
	,R.[Warm transfer date]
	,'' AS [FDO Complete]
	,'' AS [FDO Complete Date]
	,'' AS [FDO Physician NPI # ]
	,'' AS [FDO Physician First Name]
	,'' AS [FDO Physician Middle Name]
	,'' AS [FDO Physician Last Name ]
	,'' AS [FDO Physician Suffix]
	,'' AS [FDO Physician Address1]
	,'' AS [FDO Physician Address2]
	,'' AS [FDO Physician City]
	,'' AS [FDO Physician State]
	,'' AS [FDO Physician Zip]
	,'' AS [FDO Physician Phone]
	,'' AS [FDO Physician Fax]
	,'' AS [Comment 1]
	,'' AS [Comment 2]
	,'' AS [Comment 3]
	,'' AS [Comment 4]
	,'' AS [Comment 5]
	,'' AS [Comment 6]
	,'' AS [Comment 7]
	,'' AS [Comment 8]
	,'' AS [Comment 9]
	,'' AS [Comment 10]
	,'' AS [Comment 11]
	,'' AS [Comment 12]
	,'' AS [Comment 13]
	,'' AS [Comment 14]
	,'' AS [Comment 15]
	,'' AS [Comment 16]
	,'' AS [Comment 17]
	,'' AS [Comment 18]
	,'' AS [Comment 19]
	,'' AS [Comment 20]
	,'' AS [Comment 21]
	,'' AS [Comment 22]
	,'' AS [Comment 23]
	,'' AS [Comment 24]
	,'' AS [Comment 25]
	,'' AS [Comment 26]
	,'' AS [Comment 27]
	,'' AS [Comment 28]
	,'' AS [Comment 29]
	,'' AS [Comment 30]

INTO #FINAL_REPORT
FROM
	#REPORT_CLEAN AS R
LEFT JOIN
	[Adhoc_Employee_Metrics].[dbo].[Pharma - Report Export Log] AS REL
ON
	ISNULL(R.[Rx Number],R.ORDERNO) = REL.[RECORD ID]
	AND R.[Current Referral Status] = REL.[PATIENT STATUS]
	AND R.[Status Reason Code] = REL.[PATIENT SUB STATUS]
	AND CAST(R.[Status Date] AS DATE) = CAST(REL.STATUS_DTTM AS DATE)
	AND REL.CLIENT_NAME = @CLIENT
	AND REL.REPORT_NAME = @REPORT_TYPE
--------------------------
-- SELECT* FROM #FINAL_REPORT
-- SELECT DISTINCT * FROM #FINAL_REPORT;

-- FINAL
-- REQUIRED FOR SNAPLOGIC PIPELINE
--DECLARE @count int = (select Distinct count(*)FROM #FINAL_REPORT)
DECLARE @count int = (select count(*) FROM (SELECT DISTINCT * FROM  #FINAL_REPORT) as CT)
	if (@count=0)
	Begin
	SELECT distinct 'Records|0'as Raw_data 
	SELECT distinct
	  'Referral Number|Hub Order Transaction Number|Date of Referral Started|Referral Source|Brand Name|Referred NDC Code|RX Number|Authorized refills|Primary Diagnosis Code|Secondary Diagnosis Code|Filler1|NPI #|DEA #|First Name|Middle Name|Last Name|Suffix|Physician Address1|Physician Address2|Physician City|Physician State|Physician Zip|Physician Phone|Physician Fax|'
	+ 'Primary Payer BIN|Primary Payer PCN|Primary Group #|Filler2|Primary Payer Name|Primary Payer Type|Primary Benefit Type|Primary PBM Name|Primary Plan Name|Primary Plan Type|Primary Patient Out-of-Pocket amount|Primary Co-Pay amount|Primary Co-Pay Type|Primary Deductible|Primary Max out of pocket|Primary Lifetime Max|Primary PA Required|Primary PA Expiration Date|'
	+ 'Secondary Payer BIN|Secondary Payer PCN|Secondary Group #|Filler3|Secondary Payer Name|Secondary Payer Type|Secondary Benefit Type|Filler4|Secondary Plan Name|Secondary Plan Type|Secondary Co-Pay amount|Secondary Co-Pay Type|Secondary Deductible|Secondary Max out of pocket|Secondary Lifetime Max|Secondary PA Required|Secondary PA Expiration Date|SPP Patient ID|'
	+ 'HUB Identifier|HIPAA Consent|HIPAA Expiration Date|Patient State|Patient YOB|Patient Gender|Current Referral Status|Status Date|Status Reason Code|Pharmacy Name|Pharmacy Location Name|Location DEA|Location NPI Number|Location NCPDP Number|'
	+ 'Record ID|Prior MS Therapy #1|Prior MS Therapy #2|Duration of Prior MS Therapy|Reason for Discontinuation of Prior Therapy|Patient Diagnosis Date|BI Start Date|PA Start Date|PA Approved Date|PA Denied Date|First Appeal Start Date|'
	+ 'Transferred to another SP|Transferred from another SP|Warm transfer to Hub|Warm transfer date|FDO Complete|FDO Complete Date|'
	+ 'FDO Physician NPI # |FDO Physician First Name|FDO Physician Middle Name|FDO Physician Last Name |FDO Physician Suffix|FDO Physician Address1|FDO Physician Address2|FDO Physician City|FDO Physician State|FDO Physician Zip|FDO Physician Phone|FDO Physician Fax|'
	+ 'Comment 1|Comment 2|Comment 3|Comment 4|Comment 5|Comment 6|Comment 7|Comment 8|Comment 9|Comment 10|Comment 11|Comment 12|Comment 13|Comment 14|Comment 15|Comment 16|Comment 17|Comment 18|Comment 19|Comment 20|Comment 21|Comment 22|Comment 23|Comment 24|Comment 25|Comment 26|Comment 27|Comment 28|Comment 29|Comment 30'
	as Raw_data
	end
	else
	Begin
	SELECT distinct 'Records|'+CAST(@count AS VARCHAR(100)) as Raw_data FROM #FINAL_REPORT 

	SELECT distinct
	  'Referral Number|Hub Order Transaction Number|Date of Referral Started|Referral Source|Brand Name|Referred NDC Code|RX Number|Authorized refills|Primary Diagnosis Code|Secondary Diagnosis Code|Filler1|NPI #|DEA #|First Name|Middle Name|Last Name|Suffix|Physician Address1|Physician Address2|Physician City|Physician State|Physician Zip|Physician Phone|Physician Fax|'
	+ 'Primary Payer BIN|Primary Payer PCN|Primary Group #|Filler2|Primary Payer Name|Primary Payer Type|Primary Benefit Type|Primary PBM Name|Primary Plan Name|Primary Plan Type|Primary Patient Out-of-Pocket amount|Primary Co-Pay amount|Primary Co-Pay Type|Primary Deductible|Primary Max out of pocket|Primary Lifetime Max|Primary PA Required|Primary PA Expiration Date|'
	+ 'Secondary Payer BIN|Secondary Payer PCN|Secondary Group #|Filler3|Secondary Payer Name|Secondary Payer Type|Secondary Benefit Type|Filler4|Secondary Plan Name|Secondary Plan Type|Secondary Co-Pay amount|Secondary Co-Pay Type|Secondary Deductible|Secondary Max out of pocket|Secondary Lifetime Max|Secondary PA Required|Secondary PA Expiration Date|SPP Patient ID|'
	+ 'HUB Identifier|HIPAA Consent|HIPAA Expiration Date|Patient State|Patient YOB|Patient Gender|Current Referral Status|Status Date|Status Reason Code|Pharmacy Name|Pharmacy Location Name|Location DEA|Location NPI Number|Location NCPDP Number|'
	+ 'Record ID|Prior MS Therapy #1|Prior MS Therapy #2|Duration of Prior MS Therapy|Reason for Discontinuation of Prior Therapy|Patient Diagnosis Date|BI Start Date|PA Start Date|PA Approved Date|PA Denied Date|First Appeal Start Date|'
	+ 'Transferred to another SP|Transferred from another SP|Warm transfer to Hub|Warm transfer date|FDO Complete|FDO Complete Date|'
	+ 'FDO Physician NPI # |FDO Physician First Name|FDO Physician Middle Name|FDO Physician Last Name |FDO Physician Suffix|FDO Physician Address1|FDO Physician Address2|FDO Physician City|FDO Physician State|FDO Physician Zip|FDO Physician Phone|FDO Physician Fax|'
	+ 'Comment 1|Comment 2|Comment 3|Comment 4|Comment 5|Comment 6|Comment 7|Comment 8|Comment 9|Comment 10|Comment 11|Comment 12|Comment 13|Comment 14|Comment 15|Comment 16|Comment 17|Comment 18|Comment 19|Comment 20|Comment 21|Comment 22|Comment 23|Comment 24|Comment 25|Comment 26|Comment 27|Comment 28|Comment 29|Comment 30'
	as Raw_data FROM #FINAL_REPORT
	SELECT distinct 
	ISNULL(CONVERT(VARCHAR(300),[Referral Number]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Hub Order Transaction Number]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Date of Referral Started]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Referral Source]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Brand Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Referred NDC Code]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[RX Number]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Authorized refills]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Diagnosis Code]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Diagnosis Code]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Filler1]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[NPI #]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[DEA #]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[First Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Middle Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Last Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Suffix]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Physician Address1]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Physician Address2]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Physician City]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Physician State]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Physician Zip]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Physician Phone]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Physician Fax]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Payer BIN]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Payer PCN]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Group #]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Filler2]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Payer Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Payer Type]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Benefit Type]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary PBM Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Plan Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Plan Type]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Patient Out-of-Pocket amount]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Co-Pay amount]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Co-Pay Type]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Deductible]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Max out of pocket]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary Lifetime Max]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary PA Required]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Primary PA Expiration Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Payer BIN]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Payer PCN]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Group #]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Filler3]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Payer Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Payer Type]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Benefit Type]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Filler4]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Plan Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Plan Type]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Co-Pay amount]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Co-Pay Type]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Deductible]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Max out of pocket]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary Lifetime Max]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary PA Required]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Secondary PA Expiration Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[SPP Patient ID]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[HUB Identifier]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[HIPAA Consent]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[HIPAA Expiration Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Patient State]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Patient YOB]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Patient Gender]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Current Referral Status]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Status Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Status Reason Code]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Pharmacy Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Pharmacy Location Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Location DEA]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Location NPI Number]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Location NCPDP Number]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Record ID]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Prior MS Therapy #1]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Prior MS Therapy #2]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Duration of Prior MS Therapy]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Reason for Discontinuation of Prior Therapy]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Patient Diagnosis Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[BI Start Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[PA Start Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[PA Approved Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[PA Denied Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[First Appeal Start Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Transferred to another SP]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Transferred from another SP]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Warm transfer to Hub]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Warm transfer date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Complete]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Complete Date]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician NPI # ]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician First Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician Middle Name]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician Last Name ]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician Suffix]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician Address1]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician Address2]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician City]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician State]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician Zip]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician Phone]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[FDO Physician Fax]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 1]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 2]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 3]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 4]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 5]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 6]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 7]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 8]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 9]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 10]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 11]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 12]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 13]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 14]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 15]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 16]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 17]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 18]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 19]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 20]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 21]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 22]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 23]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 24]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 25]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 26]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 27]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 28]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 29]),'')+'|'+
	ISNULL(CONVERT(VARCHAR(300),[Comment 30]),'')
	as Raw_data FROM #FINAL_REPORT
	end 


--  DROP TABLES HERE 
DROP TABLE #CLIENT_DRUGS
DROP TABLE #TEST_PATIENTS
DROP TABLE #PATIENT_SAMPLE
DROP TABLE #ALL_RX_SHIP_DT
DROP TABLE #ALL_REFERRALS_UNCLEAN
DROP TABLE #REFERRAL_FILTER
DROP TABLE #ALL_REFERRALS
DROP TABLE #FILL_ACTIVITY_ORDER
DROP TABLE #PATIENT_DRUG_SWITCHES
DROP TABLE #CLAIM_RESPONSES
DROP TABLE #CLAIMS
DROP TABLE #QUEUE_LOCATION
DROP TABLE #LAST_EVENT
DROP TABLE #DISCONTINUED_ORDERS_SAMPLE
DROP TABLE #DC_DETAILS
DROP TABLE #DISCONTINUED_FINAL
DROP TABLE #SUB_STATUS_PRE
DROP TABLE #SUB_STATUS
DROP TABLE #PRE_FINAL_STATUS
/*FILL NUMBER TABLES*/
DROP TABLE #FILL_NBR_LOG	
DROP TABLE #FIRST_FILL_RECORD	
DROP TABLE #ORDER_FILL_DTTM
DROP TABLE #DC_DTTM
DROP TABLE #NEVER_FILLED
DROP TABLE #FILL_RECORD
DROP TABLE #FILL_DTTM
DROP TABLE #FILL_NBR
DROP TABLE #FINAL_STATUS
DROP TABLE #ICD_MASTER_LIST
DROP TABLE #PATIENT_ICD_CODES_UNCLEAN
DROP TABLE #PATIENT_ICD_CODES_CLEAN
DROP TABLE #PRE_CLAIM_DETAILS
DROP TABLE #PA_REQUIRED
DROP TABLE #PA_DATES
DROP TABLE #COINSURANCE_AMOUNT
DROP TABLE #DEDUCTIBLE_AMOUNT
DROP TABLE #TOTAL_DEDUCTIBLE
DROP TABLE #PATIENT_MAX_OOP
DROP TABLE #CLAIMS_DETAILS_FINAL
DROP TABLE #PRE_TRACKING_NBR_FIX
DROP TABLE #TRACKING_NBR_FIX
DROP TABLE #RX_TRANSFER
DROP TABLE #PRIOR_MS_THERAPY
DROP TABLE #BI_START_DATE
/*FINAL TABLES*/
DROP TABLE #REPORT_UNCLEAN
DROP TABLE #REPORT_CLEAN
DROP TABLE #FINAL_REPORT

END
-- FOR TESTING
/*
SELECT * FROM  #CLIENT_DRUGS
SELECT * FROM  #TEST_PATIENTS
SELECT * FROM  #PATIENT_SAMPLE
SELECT * FROM  #ALL_RX_SHIP_DT
SELECT * FROM  #ALL_REFERRALS_UNCLEAN
SELECT * FROM  #REFERRAL_FILTER
SELECT * FROM  #ALL_REFERRALS
SELECT * FROM  #FILL_ACTIVITY_ORDER
SELECT * FROM  #PATIENT_DRUG_SWITCHES
SELECT * FROM  #CLAIM_RESPONSES
SELECT * FROM  #CLAIMS
SELECT * FROM  #QUEUE_LOCATION
SELECT * FROM  #LAST_EVENT
SELECT * FROM  #DISCONTINUED_ORDERS_SAMPLE
SELECT * FROM  #DC_DETAILS
SELECT * FROM  #DISCONTINUED_FINAL
SELECT * FROM  #SUB_STATUS_PRE
SELECT * FROM  #SUB_STATUS
SELECT * FROM  #PRE_FINAL_STATUS
/*FILL NUMBER TABLES*/
SELECT * FROM  #FILL_NBR_LOG	
SELECT * FROM  #FIRST_FILL_RECORD	
SELECT * FROM  #ORDER_FILL_DTTM
SELECT * FROM  #DC_DTTM
SELECT * FROM  #NEVER_FILLED
SELECT * FROM  #FILL_RECORD
SELECT * FROM  #FILL_DTTM
SELECT * FROM  #FILL_NBR
SELECT * FROM  #FINAL_STATUS
SELECT * FROM  #ICD_MASTER_LIST
SELECT * FROM  #PATIENT_ICD_CODES_UNCLEAN
SELECT * FROM  #PATIENT_ICD_CODES_CLEAN
SELECT * FROM  #PRE_CLAIM_DETAILS
SELECT * FROM  #PA_REQUIRED
SELECT * FROM  #PA_DATES
SELECT * FROM  #COINSURANCE_AMOUNT
SELECT * FROM  #DEDUCTIBLE_AMOUNT
SELECT * FROM  #TOTAL_DEDUCTIBLE
SELECT * FROM  #PATIENT_MAX_OOP
SELECT * FROM  #CLAIMS_DETAILS_FINAL
SELECT * FROM  #PRE_TRACKING_NBR_FIX
SELECT * FROM  #TRACKING_NBR_FIX
SELECT * FROM  #RX_TRANSFER
SELECT * FROM  #PRIOR_MS_THERAPY
SELECT * FROM  #BI_START_DATE
SELECT * FROM  #REPORT_UNCLEAN
SELECT * FROM CPR_REPORTING.DBO.LABLOG WHERE LINK = 701210
*/





GO


